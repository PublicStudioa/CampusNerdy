//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM 关系源元数据

[assembly: EdmRelationshipAttribute("CampusNerdyModel", "FK_areaInfo_tb_Group1", "tb_Group", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CampusNerdy.Model.tb_Group), "tb_Area", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CampusNerdy.Model.tb_Area), true)]
[assembly: EdmRelationshipAttribute("CampusNerdyModel", "FK_tb_SuperMaket_tb_Area", "tb_Area", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CampusNerdy.Model.tb_Area), "tb_SuperMaket", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CampusNerdy.Model.tb_SuperMaket), true)]
[assembly: EdmRelationshipAttribute("CampusNerdyModel", "FK_tb_CheckItem_tb_CheckOut", "tb_CheckOut", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CampusNerdy.Model.tb_CheckOut), "tb_CheckItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CampusNerdy.Model.tb_CheckItem), true)]
[assembly: EdmRelationshipAttribute("CampusNerdyModel", "FK_tb_CheckItem_tb_GoodInfoToSuperMarket", "tb_GoodInfoToSuperMarket", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CampusNerdy.Model.tb_GoodInfoToSuperMarket), "tb_CheckItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CampusNerdy.Model.tb_CheckItem), true)]
[assembly: EdmRelationshipAttribute("CampusNerdyModel", "FK_dealRequest_goodInfo_superMarket", "tb_GoodInfoToSuperMarket", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CampusNerdy.Model.tb_GoodInfoToSuperMarket), "tb_DealRequest", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CampusNerdy.Model.tb_DealRequest), true)]
[assembly: EdmRelationshipAttribute("CampusNerdyModel", "FK_goodInfo_superMarket_tb_GoodInf", "tb_Good", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CampusNerdy.Model.tb_Good), "tb_GoodInfoToSuperMarket", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CampusNerdy.Model.tb_GoodInfoToSuperMarket), true)]
[assembly: EdmRelationshipAttribute("CampusNerdyModel", "FK_goodInfo_superMarket_tb_SuperMaket", "tb_SuperMaket", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CampusNerdy.Model.tb_SuperMaket), "tb_GoodInfoToSuperMarket", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CampusNerdy.Model.tb_GoodInfoToSuperMarket), true)]
[assembly: EdmRelationshipAttribute("CampusNerdyModel", "FK_sender_tb_Group", "tb_Group", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CampusNerdy.Model.tb_Group), "tb_Sender", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CampusNerdy.Model.tb_Sender), true)]
[assembly: EdmRelationshipAttribute("CampusNerdyModel", "FK_tb_SuperMaket_tb_Group", "tb_Group", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CampusNerdy.Model.tb_Group), "tb_SuperMaket", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CampusNerdy.Model.tb_SuperMaket), true)]
[assembly: EdmRelationshipAttribute("CampusNerdyModel", "FK_tb_Role_ModuleRelation_tb_Module1", "tb_Module", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CampusNerdy.Model.tb_Module), "tb_RoleToModule", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CampusNerdy.Model.tb_RoleToModule), true)]
[assembly: EdmRelationshipAttribute("CampusNerdyModel", "FK_tb_Role_UserRelations_tb_Role", "tb_Role", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CampusNerdy.Model.tb_Role), "tb_RoleToUser", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CampusNerdy.Model.tb_RoleToUser), true)]
[assembly: EdmRelationshipAttribute("CampusNerdyModel", "FK_tb_Role_UserRelations_tb_User", "tb_User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CampusNerdy.Model.tb_User), "tb_RoleToUser", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CampusNerdy.Model.tb_RoleToUser), true)]
[assembly: EdmRelationshipAttribute("CampusNerdyModel", "FK_tb_UserInfo_tb_User", "tb_User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CampusNerdy.Model.tb_User), "tb_UserInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CampusNerdy.Model.tb_UserInfo), true)]

#endregion

namespace CampusNerdy.Model
{
    #region 上下文
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    public partial class CampusNerdyEntities : ObjectContext
    {
        #region 构造函数
    
        /// <summary>
        /// 请使用应用程序配置文件的“CampusNerdyEntities”部分中的连接字符串初始化新 CampusNerdyEntities 对象。
        /// </summary>
        public CampusNerdyEntities() : base("name=CampusNerdyEntities", "CampusNerdyEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 CampusNerdyEntities 对象。
        /// </summary>
        public CampusNerdyEntities(string connectionString) : base(connectionString, "CampusNerdyEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 CampusNerdyEntities 对象。
        /// </summary>
        public CampusNerdyEntities(EntityConnection connection) : base(connection, "CampusNerdyEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 分部方法
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<sysdiagram> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagram>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagram> _sysdiagrams;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<tb_Area> tb_Area
        {
            get
            {
                if ((_tb_Area == null))
                {
                    _tb_Area = base.CreateObjectSet<tb_Area>("tb_Area");
                }
                return _tb_Area;
            }
        }
        private ObjectSet<tb_Area> _tb_Area;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<tb_CheckItem> tb_CheckItem
        {
            get
            {
                if ((_tb_CheckItem == null))
                {
                    _tb_CheckItem = base.CreateObjectSet<tb_CheckItem>("tb_CheckItem");
                }
                return _tb_CheckItem;
            }
        }
        private ObjectSet<tb_CheckItem> _tb_CheckItem;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<tb_CheckOut> tb_CheckOut
        {
            get
            {
                if ((_tb_CheckOut == null))
                {
                    _tb_CheckOut = base.CreateObjectSet<tb_CheckOut>("tb_CheckOut");
                }
                return _tb_CheckOut;
            }
        }
        private ObjectSet<tb_CheckOut> _tb_CheckOut;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<tb_DealHistory> tb_DealHistory
        {
            get
            {
                if ((_tb_DealHistory == null))
                {
                    _tb_DealHistory = base.CreateObjectSet<tb_DealHistory>("tb_DealHistory");
                }
                return _tb_DealHistory;
            }
        }
        private ObjectSet<tb_DealHistory> _tb_DealHistory;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<tb_DealRequest> tb_DealRequest
        {
            get
            {
                if ((_tb_DealRequest == null))
                {
                    _tb_DealRequest = base.CreateObjectSet<tb_DealRequest>("tb_DealRequest");
                }
                return _tb_DealRequest;
            }
        }
        private ObjectSet<tb_DealRequest> _tb_DealRequest;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<tb_Dictionary> tb_Dictionary
        {
            get
            {
                if ((_tb_Dictionary == null))
                {
                    _tb_Dictionary = base.CreateObjectSet<tb_Dictionary>("tb_Dictionary");
                }
                return _tb_Dictionary;
            }
        }
        private ObjectSet<tb_Dictionary> _tb_Dictionary;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<tb_Good> tb_Good
        {
            get
            {
                if ((_tb_Good == null))
                {
                    _tb_Good = base.CreateObjectSet<tb_Good>("tb_Good");
                }
                return _tb_Good;
            }
        }
        private ObjectSet<tb_Good> _tb_Good;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<tb_GoodInfoToSuperMarket> tb_GoodInfoToSuperMarket
        {
            get
            {
                if ((_tb_GoodInfoToSuperMarket == null))
                {
                    _tb_GoodInfoToSuperMarket = base.CreateObjectSet<tb_GoodInfoToSuperMarket>("tb_GoodInfoToSuperMarket");
                }
                return _tb_GoodInfoToSuperMarket;
            }
        }
        private ObjectSet<tb_GoodInfoToSuperMarket> _tb_GoodInfoToSuperMarket;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<tb_Group> tb_Group
        {
            get
            {
                if ((_tb_Group == null))
                {
                    _tb_Group = base.CreateObjectSet<tb_Group>("tb_Group");
                }
                return _tb_Group;
            }
        }
        private ObjectSet<tb_Group> _tb_Group;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<tb_Module> tb_Module
        {
            get
            {
                if ((_tb_Module == null))
                {
                    _tb_Module = base.CreateObjectSet<tb_Module>("tb_Module");
                }
                return _tb_Module;
            }
        }
        private ObjectSet<tb_Module> _tb_Module;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<tb_Role> tb_Role
        {
            get
            {
                if ((_tb_Role == null))
                {
                    _tb_Role = base.CreateObjectSet<tb_Role>("tb_Role");
                }
                return _tb_Role;
            }
        }
        private ObjectSet<tb_Role> _tb_Role;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<tb_RoleToModule> tb_RoleToModule
        {
            get
            {
                if ((_tb_RoleToModule == null))
                {
                    _tb_RoleToModule = base.CreateObjectSet<tb_RoleToModule>("tb_RoleToModule");
                }
                return _tb_RoleToModule;
            }
        }
        private ObjectSet<tb_RoleToModule> _tb_RoleToModule;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<tb_RoleToUser> tb_RoleToUser
        {
            get
            {
                if ((_tb_RoleToUser == null))
                {
                    _tb_RoleToUser = base.CreateObjectSet<tb_RoleToUser>("tb_RoleToUser");
                }
                return _tb_RoleToUser;
            }
        }
        private ObjectSet<tb_RoleToUser> _tb_RoleToUser;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<tb_Sender> tb_Sender
        {
            get
            {
                if ((_tb_Sender == null))
                {
                    _tb_Sender = base.CreateObjectSet<tb_Sender>("tb_Sender");
                }
                return _tb_Sender;
            }
        }
        private ObjectSet<tb_Sender> _tb_Sender;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<tb_SuperMaket> tb_SuperMaket
        {
            get
            {
                if ((_tb_SuperMaket == null))
                {
                    _tb_SuperMaket = base.CreateObjectSet<tb_SuperMaket>("tb_SuperMaket");
                }
                return _tb_SuperMaket;
            }
        }
        private ObjectSet<tb_SuperMaket> _tb_SuperMaket;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<tb_User> tb_User
        {
            get
            {
                if ((_tb_User == null))
                {
                    _tb_User = base.CreateObjectSet<tb_User>("tb_User");
                }
                return _tb_User;
            }
        }
        private ObjectSet<tb_User> _tb_User;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<tb_UserInfo> tb_UserInfo
        {
            get
            {
                if ((_tb_UserInfo == null))
                {
                    _tb_UserInfo = base.CreateObjectSet<tb_UserInfo>("tb_UserInfo");
                }
                return _tb_UserInfo;
            }
        }
        private ObjectSet<tb_UserInfo> _tb_UserInfo;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<View_UserAndRole> View_UserAndRole
        {
            get
            {
                if ((_View_UserAndRole == null))
                {
                    _View_UserAndRole = base.CreateObjectSet<View_UserAndRole>("View_UserAndRole");
                }
                return _View_UserAndRole;
            }
        }
        private ObjectSet<View_UserAndRole> _View_UserAndRole;

        #endregion

        #region AddTo 方法
    
        /// <summary>
        /// 用于向 sysdiagrams EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTosysdiagrams(sysdiagram sysdiagram)
        {
            base.AddObject("sysdiagrams", sysdiagram);
        }
    
        /// <summary>
        /// 用于向 tb_Area EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTotb_Area(tb_Area tb_Area)
        {
            base.AddObject("tb_Area", tb_Area);
        }
    
        /// <summary>
        /// 用于向 tb_CheckItem EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTotb_CheckItem(tb_CheckItem tb_CheckItem)
        {
            base.AddObject("tb_CheckItem", tb_CheckItem);
        }
    
        /// <summary>
        /// 用于向 tb_CheckOut EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTotb_CheckOut(tb_CheckOut tb_CheckOut)
        {
            base.AddObject("tb_CheckOut", tb_CheckOut);
        }
    
        /// <summary>
        /// 用于向 tb_DealHistory EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTotb_DealHistory(tb_DealHistory tb_DealHistory)
        {
            base.AddObject("tb_DealHistory", tb_DealHistory);
        }
    
        /// <summary>
        /// 用于向 tb_DealRequest EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTotb_DealRequest(tb_DealRequest tb_DealRequest)
        {
            base.AddObject("tb_DealRequest", tb_DealRequest);
        }
    
        /// <summary>
        /// 用于向 tb_Dictionary EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTotb_Dictionary(tb_Dictionary tb_Dictionary)
        {
            base.AddObject("tb_Dictionary", tb_Dictionary);
        }
    
        /// <summary>
        /// 用于向 tb_Good EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTotb_Good(tb_Good tb_Good)
        {
            base.AddObject("tb_Good", tb_Good);
        }
    
        /// <summary>
        /// 用于向 tb_GoodInfoToSuperMarket EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTotb_GoodInfoToSuperMarket(tb_GoodInfoToSuperMarket tb_GoodInfoToSuperMarket)
        {
            base.AddObject("tb_GoodInfoToSuperMarket", tb_GoodInfoToSuperMarket);
        }
    
        /// <summary>
        /// 用于向 tb_Group EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTotb_Group(tb_Group tb_Group)
        {
            base.AddObject("tb_Group", tb_Group);
        }
    
        /// <summary>
        /// 用于向 tb_Module EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTotb_Module(tb_Module tb_Module)
        {
            base.AddObject("tb_Module", tb_Module);
        }
    
        /// <summary>
        /// 用于向 tb_Role EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTotb_Role(tb_Role tb_Role)
        {
            base.AddObject("tb_Role", tb_Role);
        }
    
        /// <summary>
        /// 用于向 tb_RoleToModule EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTotb_RoleToModule(tb_RoleToModule tb_RoleToModule)
        {
            base.AddObject("tb_RoleToModule", tb_RoleToModule);
        }
    
        /// <summary>
        /// 用于向 tb_RoleToUser EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTotb_RoleToUser(tb_RoleToUser tb_RoleToUser)
        {
            base.AddObject("tb_RoleToUser", tb_RoleToUser);
        }
    
        /// <summary>
        /// 用于向 tb_Sender EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTotb_Sender(tb_Sender tb_Sender)
        {
            base.AddObject("tb_Sender", tb_Sender);
        }
    
        /// <summary>
        /// 用于向 tb_SuperMaket EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTotb_SuperMaket(tb_SuperMaket tb_SuperMaket)
        {
            base.AddObject("tb_SuperMaket", tb_SuperMaket);
        }
    
        /// <summary>
        /// 用于向 tb_User EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTotb_User(tb_User tb_User)
        {
            base.AddObject("tb_User", tb_User);
        }
    
        /// <summary>
        /// 用于向 tb_UserInfo EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTotb_UserInfo(tb_UserInfo tb_UserInfo)
        {
            base.AddObject("tb_UserInfo", tb_UserInfo);
        }
    
        /// <summary>
        /// 用于向 View_UserAndRole EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToView_UserAndRole(View_UserAndRole view_UserAndRole)
        {
            base.AddObject("View_UserAndRole", view_UserAndRole);
        }

        #endregion

    }

    #endregion

    #region 实体
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CampusNerdyModel", Name="sysdiagram")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagram : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 sysdiagram 对象。
        /// </summary>
        /// <param name="name">name 属性的初始值。</param>
        /// <param name="principal_id">principal_id 属性的初始值。</param>
        /// <param name="diagram_id">diagram_id 属性的初始值。</param>
        public static sysdiagram Createsysdiagram(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagram sysdiagram = new sysdiagram();
            sysdiagram.name = name;
            sysdiagram.principal_id = principal_id;
            sysdiagram.diagram_id = diagram_id;
            return sysdiagram;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CampusNerdyModel", Name="tb_Area")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tb_Area : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 tb_Area 对象。
        /// </summary>
        /// <param name="areaId">AreaId 属性的初始值。</param>
        public static tb_Area Createtb_Area(global::System.String areaId)
        {
            tb_Area tb_Area = new tb_Area();
            tb_Area.AreaId = areaId;
            return tb_Area;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AreaId
        {
            get
            {
                return _AreaId;
            }
            set
            {
                if (_AreaId != value)
                {
                    OnAreaIdChanging(value);
                    ReportPropertyChanging("AreaId");
                    _AreaId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("AreaId");
                    OnAreaIdChanged();
                }
            }
        }
        private global::System.String _AreaId;
        partial void OnAreaIdChanging(global::System.String value);
        partial void OnAreaIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AreaName
        {
            get
            {
                return _AreaName;
            }
            set
            {
                OnAreaNameChanging(value);
                ReportPropertyChanging("AreaName");
                _AreaName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AreaName");
                OnAreaNameChanged();
            }
        }
        private global::System.String _AreaName;
        partial void OnAreaNameChanging(global::System.String value);
        partial void OnAreaNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AreaInfo
        {
            get
            {
                return _AreaInfo;
            }
            set
            {
                OnAreaInfoChanging(value);
                ReportPropertyChanging("AreaInfo");
                _AreaInfo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AreaInfo");
                OnAreaInfoChanged();
            }
        }
        private global::System.String _AreaInfo;
        partial void OnAreaInfoChanging(global::System.String value);
        partial void OnAreaInfoChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CampusNerdyModel", "FK_areaInfo_tb_Group1", "tb_Group")]
        public tb_Group tb_Group
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tb_Group>("CampusNerdyModel.FK_areaInfo_tb_Group1", "tb_Group").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tb_Group>("CampusNerdyModel.FK_areaInfo_tb_Group1", "tb_Group").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<tb_Group> tb_GroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tb_Group>("CampusNerdyModel.FK_areaInfo_tb_Group1", "tb_Group");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<tb_Group>("CampusNerdyModel.FK_areaInfo_tb_Group1", "tb_Group", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CampusNerdyModel", "FK_tb_SuperMaket_tb_Area", "tb_SuperMaket")]
        public EntityCollection<tb_SuperMaket> tb_SuperMaket
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<tb_SuperMaket>("CampusNerdyModel.FK_tb_SuperMaket_tb_Area", "tb_SuperMaket");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<tb_SuperMaket>("CampusNerdyModel.FK_tb_SuperMaket_tb_Area", "tb_SuperMaket", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CampusNerdyModel", Name="tb_CheckItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tb_CheckItem : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 tb_CheckItem 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        public static tb_CheckItem Createtb_CheckItem(global::System.Int32 id)
        {
            tb_CheckItem tb_CheckItem = new tb_CheckItem();
            tb_CheckItem.ID = id;
            return tb_CheckItem;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CheckOutID
        {
            get
            {
                return _CheckOutID;
            }
            set
            {
                OnCheckOutIDChanging(value);
                ReportPropertyChanging("CheckOutID");
                _CheckOutID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CheckOutID");
                OnCheckOutIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CheckOutID;
        partial void OnCheckOutIDChanging(Nullable<global::System.Int32> value);
        partial void OnCheckOutIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> GoodSuperId
        {
            get
            {
                return _GoodSuperId;
            }
            set
            {
                OnGoodSuperIdChanging(value);
                ReportPropertyChanging("GoodSuperId");
                _GoodSuperId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GoodSuperId");
                OnGoodSuperIdChanged();
            }
        }
        private Nullable<global::System.Int32> _GoodSuperId;
        partial void OnGoodSuperIdChanging(Nullable<global::System.Int32> value);
        partial void OnGoodSuperIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SuperMarketID
        {
            get
            {
                return _SuperMarketID;
            }
            set
            {
                OnSuperMarketIDChanging(value);
                ReportPropertyChanging("SuperMarketID");
                _SuperMarketID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SuperMarketID");
                OnSuperMarketIDChanged();
            }
        }
        private Nullable<global::System.Int32> _SuperMarketID;
        partial void OnSuperMarketIDChanging(Nullable<global::System.Int32> value);
        partial void OnSuperMarketIDChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CampusNerdyModel", "FK_tb_CheckItem_tb_CheckOut", "tb_CheckOut")]
        public tb_CheckOut tb_CheckOut
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tb_CheckOut>("CampusNerdyModel.FK_tb_CheckItem_tb_CheckOut", "tb_CheckOut").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tb_CheckOut>("CampusNerdyModel.FK_tb_CheckItem_tb_CheckOut", "tb_CheckOut").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<tb_CheckOut> tb_CheckOutReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tb_CheckOut>("CampusNerdyModel.FK_tb_CheckItem_tb_CheckOut", "tb_CheckOut");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<tb_CheckOut>("CampusNerdyModel.FK_tb_CheckItem_tb_CheckOut", "tb_CheckOut", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CampusNerdyModel", "FK_tb_CheckItem_tb_GoodInfoToSuperMarket", "tb_GoodInfoToSuperMarket")]
        public tb_GoodInfoToSuperMarket tb_GoodInfoToSuperMarket
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tb_GoodInfoToSuperMarket>("CampusNerdyModel.FK_tb_CheckItem_tb_GoodInfoToSuperMarket", "tb_GoodInfoToSuperMarket").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tb_GoodInfoToSuperMarket>("CampusNerdyModel.FK_tb_CheckItem_tb_GoodInfoToSuperMarket", "tb_GoodInfoToSuperMarket").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<tb_GoodInfoToSuperMarket> tb_GoodInfoToSuperMarketReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tb_GoodInfoToSuperMarket>("CampusNerdyModel.FK_tb_CheckItem_tb_GoodInfoToSuperMarket", "tb_GoodInfoToSuperMarket");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<tb_GoodInfoToSuperMarket>("CampusNerdyModel.FK_tb_CheckItem_tb_GoodInfoToSuperMarket", "tb_GoodInfoToSuperMarket", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CampusNerdyModel", Name="tb_CheckOut")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tb_CheckOut : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 tb_CheckOut 对象。
        /// </summary>
        /// <param name="checkOutID">CheckOutID 属性的初始值。</param>
        public static tb_CheckOut Createtb_CheckOut(global::System.Int32 checkOutID)
        {
            tb_CheckOut tb_CheckOut = new tb_CheckOut();
            tb_CheckOut.CheckOutID = checkOutID;
            return tb_CheckOut;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CheckOutID
        {
            get
            {
                return _CheckOutID;
            }
            set
            {
                if (_CheckOutID != value)
                {
                    OnCheckOutIDChanging(value);
                    ReportPropertyChanging("CheckOutID");
                    _CheckOutID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CheckOutID");
                    OnCheckOutIDChanged();
                }
            }
        }
        private global::System.Int32 _CheckOutID;
        partial void OnCheckOutIDChanging(global::System.Int32 value);
        partial void OnCheckOutIDChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CampusNerdyModel", "FK_tb_CheckItem_tb_CheckOut", "tb_CheckItem")]
        public EntityCollection<tb_CheckItem> tb_CheckItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<tb_CheckItem>("CampusNerdyModel.FK_tb_CheckItem_tb_CheckOut", "tb_CheckItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<tb_CheckItem>("CampusNerdyModel.FK_tb_CheckItem_tb_CheckOut", "tb_CheckItem", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CampusNerdyModel", Name="tb_DealHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tb_DealHistory : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 tb_DealHistory 对象。
        /// </summary>
        /// <param name="dealHId">DealHId 属性的初始值。</param>
        public static tb_DealHistory Createtb_DealHistory(global::System.Int32 dealHId)
        {
            tb_DealHistory tb_DealHistory = new tb_DealHistory();
            tb_DealHistory.DealHId = dealHId;
            return tb_DealHistory;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DealHId
        {
            get
            {
                return _DealHId;
            }
            set
            {
                if (_DealHId != value)
                {
                    OnDealHIdChanging(value);
                    ReportPropertyChanging("DealHId");
                    _DealHId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DealHId");
                    OnDealHIdChanged();
                }
            }
        }
        private global::System.Int32 _DealHId;
        partial void OnDealHIdChanging(global::System.Int32 value);
        partial void OnDealHIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SenderID
        {
            get
            {
                return _SenderID;
            }
            set
            {
                OnSenderIDChanging(value);
                ReportPropertyChanging("SenderID");
                _SenderID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SenderID");
                OnSenderIDChanged();
            }
        }
        private global::System.String _SenderID;
        partial void OnSenderIDChanging(global::System.String value);
        partial void OnSenderIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DealRequestID
        {
            get
            {
                return _DealRequestID;
            }
            set
            {
                OnDealRequestIDChanging(value);
                ReportPropertyChanging("DealRequestID");
                _DealRequestID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DealRequestID");
                OnDealRequestIDChanged();
            }
        }
        private Nullable<global::System.Int32> _DealRequestID;
        partial void OnDealRequestIDChanging(Nullable<global::System.Int32> value);
        partial void OnDealRequestIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> HasDone
        {
            get
            {
                return _HasDone;
            }
            set
            {
                OnHasDoneChanging(value);
                ReportPropertyChanging("HasDone");
                _HasDone = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HasDone");
                OnHasDoneChanged();
            }
        }
        private Nullable<global::System.Int32> _HasDone;
        partial void OnHasDoneChanging(Nullable<global::System.Int32> value);
        partial void OnHasDoneChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HasDoneInfo
        {
            get
            {
                return _HasDoneInfo;
            }
            set
            {
                OnHasDoneInfoChanging(value);
                ReportPropertyChanging("HasDoneInfo");
                _HasDoneInfo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HasDoneInfo");
                OnHasDoneInfoChanged();
            }
        }
        private global::System.String _HasDoneInfo;
        partial void OnHasDoneInfoChanging(global::System.String value);
        partial void OnHasDoneInfoChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SingleMarketCount
        {
            get
            {
                return _SingleMarketCount;
            }
            set
            {
                OnSingleMarketCountChanging(value);
                ReportPropertyChanging("SingleMarketCount");
                _SingleMarketCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SingleMarketCount");
                OnSingleMarketCountChanged();
            }
        }
        private Nullable<global::System.Int32> _SingleMarketCount;
        partial void OnSingleMarketCountChanging(Nullable<global::System.Int32> value);
        partial void OnSingleMarketCountChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Cash
        {
            get
            {
                return _Cash;
            }
            set
            {
                OnCashChanging(value);
                ReportPropertyChanging("Cash");
                _Cash = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Cash");
                OnCashChanged();
            }
        }
        private Nullable<global::System.Decimal> _Cash;
        partial void OnCashChanging(Nullable<global::System.Decimal> value);
        partial void OnCashChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CampusNerdyModel", Name="tb_DealRequest")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tb_DealRequest : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 tb_DealRequest 对象。
        /// </summary>
        /// <param name="dealRId">DealRId 属性的初始值。</param>
        public static tb_DealRequest Createtb_DealRequest(global::System.Int32 dealRId)
        {
            tb_DealRequest tb_DealRequest = new tb_DealRequest();
            tb_DealRequest.DealRId = dealRId;
            return tb_DealRequest;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DealRId
        {
            get
            {
                return _DealRId;
            }
            set
            {
                if (_DealRId != value)
                {
                    OnDealRIdChanging(value);
                    ReportPropertyChanging("DealRId");
                    _DealRId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DealRId");
                    OnDealRIdChanged();
                }
            }
        }
        private global::System.Int32 _DealRId;
        partial void OnDealRIdChanging(global::System.Int32 value);
        partial void OnDealRIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.String _UserId;
        partial void OnUserIdChanging(global::System.String value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RequestGoodsID
        {
            get
            {
                return _RequestGoodsID;
            }
            set
            {
                OnRequestGoodsIDChanging(value);
                ReportPropertyChanging("RequestGoodsID");
                _RequestGoodsID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RequestGoodsID");
                OnRequestGoodsIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RequestGoodsID;
        partial void OnRequestGoodsIDChanging(Nullable<global::System.Int32> value);
        partial void OnRequestGoodsIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Cash
        {
            get
            {
                return _Cash;
            }
            set
            {
                OnCashChanging(value);
                ReportPropertyChanging("Cash");
                _Cash = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Cash");
                OnCashChanged();
            }
        }
        private Nullable<global::System.Int32> _Cash;
        partial void OnCashChanging(Nullable<global::System.Int32> value);
        partial void OnCashChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private Nullable<global::System.Int32> _State;
        partial void OnStateChanging(Nullable<global::System.Int32> value);
        partial void OnStateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GroupId
        {
            get
            {
                return _GroupId;
            }
            set
            {
                OnGroupIdChanging(value);
                ReportPropertyChanging("GroupId");
                _GroupId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GroupId");
                OnGroupIdChanged();
            }
        }
        private global::System.String _GroupId;
        partial void OnGroupIdChanging(global::System.String value);
        partial void OnGroupIdChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CampusNerdyModel", "FK_dealRequest_goodInfo_superMarket", "tb_GoodInfoToSuperMarket")]
        public tb_GoodInfoToSuperMarket tb_GoodInfoToSuperMarket
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tb_GoodInfoToSuperMarket>("CampusNerdyModel.FK_dealRequest_goodInfo_superMarket", "tb_GoodInfoToSuperMarket").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tb_GoodInfoToSuperMarket>("CampusNerdyModel.FK_dealRequest_goodInfo_superMarket", "tb_GoodInfoToSuperMarket").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<tb_GoodInfoToSuperMarket> tb_GoodInfoToSuperMarketReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tb_GoodInfoToSuperMarket>("CampusNerdyModel.FK_dealRequest_goodInfo_superMarket", "tb_GoodInfoToSuperMarket");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<tb_GoodInfoToSuperMarket>("CampusNerdyModel.FK_dealRequest_goodInfo_superMarket", "tb_GoodInfoToSuperMarket", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CampusNerdyModel", Name="tb_Dictionary")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tb_Dictionary : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 tb_Dictionary 对象。
        /// </summary>
        /// <param name="dicId">DicId 属性的初始值。</param>
        public static tb_Dictionary Createtb_Dictionary(global::System.Int32 dicId)
        {
            tb_Dictionary tb_Dictionary = new tb_Dictionary();
            tb_Dictionary.DicId = dicId;
            return tb_Dictionary;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DicId
        {
            get
            {
                return _DicId;
            }
            set
            {
                if (_DicId != value)
                {
                    OnDicIdChanging(value);
                    ReportPropertyChanging("DicId");
                    _DicId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DicId");
                    OnDicIdChanged();
                }
            }
        }
        private global::System.Int32 _DicId;
        partial void OnDicIdChanging(global::System.Int32 value);
        partial void OnDicIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String dicType
        {
            get
            {
                return _dicType;
            }
            set
            {
                OndicTypeChanging(value);
                ReportPropertyChanging("dicType");
                _dicType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("dicType");
                OndicTypeChanged();
            }
        }
        private global::System.String _dicType;
        partial void OndicTypeChanging(global::System.String value);
        partial void OndicTypeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String dicKey
        {
            get
            {
                return _dicKey;
            }
            set
            {
                OndicKeyChanging(value);
                ReportPropertyChanging("dicKey");
                _dicKey = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("dicKey");
                OndicKeyChanged();
            }
        }
        private global::System.String _dicKey;
        partial void OndicKeyChanging(global::System.String value);
        partial void OndicKeyChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String dicValue
        {
            get
            {
                return _dicValue;
            }
            set
            {
                OndicValueChanging(value);
                ReportPropertyChanging("dicValue");
                _dicValue = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("dicValue");
                OndicValueChanged();
            }
        }
        private global::System.String _dicValue;
        partial void OndicValueChanging(global::System.String value);
        partial void OndicValueChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String dicPreKey
        {
            get
            {
                return _dicPreKey;
            }
            set
            {
                OndicPreKeyChanging(value);
                ReportPropertyChanging("dicPreKey");
                _dicPreKey = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("dicPreKey");
                OndicPreKeyChanged();
            }
        }
        private global::System.String _dicPreKey;
        partial void OndicPreKeyChanging(global::System.String value);
        partial void OndicPreKeyChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String dicRemark
        {
            get
            {
                return _dicRemark;
            }
            set
            {
                OndicRemarkChanging(value);
                ReportPropertyChanging("dicRemark");
                _dicRemark = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("dicRemark");
                OndicRemarkChanged();
            }
        }
        private global::System.String _dicRemark;
        partial void OndicRemarkChanging(global::System.String value);
        partial void OndicRemarkChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CampusNerdyModel", Name="tb_Good")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tb_Good : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 tb_Good 对象。
        /// </summary>
        /// <param name="goodId">GoodId 属性的初始值。</param>
        public static tb_Good Createtb_Good(global::System.Int32 goodId)
        {
            tb_Good tb_Good = new tb_Good();
            tb_Good.GoodId = goodId;
            return tb_Good;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GoodId
        {
            get
            {
                return _GoodId;
            }
            set
            {
                if (_GoodId != value)
                {
                    OnGoodIdChanging(value);
                    ReportPropertyChanging("GoodId");
                    _GoodId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GoodId");
                    OnGoodIdChanged();
                }
            }
        }
        private global::System.Int32 _GoodId;
        partial void OnGoodIdChanging(global::System.Int32 value);
        partial void OnGoodIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GoodName
        {
            get
            {
                return _GoodName;
            }
            set
            {
                OnGoodNameChanging(value);
                ReportPropertyChanging("GoodName");
                _GoodName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GoodName");
                OnGoodNameChanged();
            }
        }
        private global::System.String _GoodName;
        partial void OnGoodNameChanging(global::System.String value);
        partial void OnGoodNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GoodDescription
        {
            get
            {
                return _GoodDescription;
            }
            set
            {
                OnGoodDescriptionChanging(value);
                ReportPropertyChanging("GoodDescription");
                _GoodDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GoodDescription");
                OnGoodDescriptionChanged();
            }
        }
        private global::System.String _GoodDescription;
        partial void OnGoodDescriptionChanging(global::System.String value);
        partial void OnGoodDescriptionChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsUse
        {
            get
            {
                return _IsUse;
            }
            set
            {
                OnIsUseChanging(value);
                ReportPropertyChanging("IsUse");
                _IsUse = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsUse");
                OnIsUseChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsUse;
        partial void OnIsUseChanging(Nullable<global::System.Boolean> value);
        partial void OnIsUseChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CampusNerdyModel", "FK_goodInfo_superMarket_tb_GoodInf", "tb_GoodInfoToSuperMarket")]
        public EntityCollection<tb_GoodInfoToSuperMarket> tb_GoodInfoToSuperMarket
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<tb_GoodInfoToSuperMarket>("CampusNerdyModel.FK_goodInfo_superMarket_tb_GoodInf", "tb_GoodInfoToSuperMarket");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<tb_GoodInfoToSuperMarket>("CampusNerdyModel.FK_goodInfo_superMarket_tb_GoodInf", "tb_GoodInfoToSuperMarket", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CampusNerdyModel", Name="tb_GoodInfoToSuperMarket")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tb_GoodInfoToSuperMarket : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 tb_GoodInfoToSuperMarket 对象。
        /// </summary>
        /// <param name="goodSuperID">GoodSuperID 属性的初始值。</param>
        public static tb_GoodInfoToSuperMarket Createtb_GoodInfoToSuperMarket(global::System.Int32 goodSuperID)
        {
            tb_GoodInfoToSuperMarket tb_GoodInfoToSuperMarket = new tb_GoodInfoToSuperMarket();
            tb_GoodInfoToSuperMarket.GoodSuperID = goodSuperID;
            return tb_GoodInfoToSuperMarket;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GoodSuperID
        {
            get
            {
                return _GoodSuperID;
            }
            set
            {
                if (_GoodSuperID != value)
                {
                    OnGoodSuperIDChanging(value);
                    ReportPropertyChanging("GoodSuperID");
                    _GoodSuperID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GoodSuperID");
                    OnGoodSuperIDChanged();
                }
            }
        }
        private global::System.Int32 _GoodSuperID;
        partial void OnGoodSuperIDChanging(global::System.Int32 value);
        partial void OnGoodSuperIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> GoodId
        {
            get
            {
                return _GoodId;
            }
            set
            {
                OnGoodIdChanging(value);
                ReportPropertyChanging("GoodId");
                _GoodId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GoodId");
                OnGoodIdChanged();
            }
        }
        private Nullable<global::System.Int32> _GoodId;
        partial void OnGoodIdChanging(Nullable<global::System.Int32> value);
        partial void OnGoodIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SuperMarketId
        {
            get
            {
                return _SuperMarketId;
            }
            set
            {
                OnSuperMarketIdChanging(value);
                ReportPropertyChanging("SuperMarketId");
                _SuperMarketId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SuperMarketId");
                OnSuperMarketIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SuperMarketId;
        partial void OnSuperMarketIdChanging(Nullable<global::System.Int32> value);
        partial void OnSuperMarketIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Cash
        {
            get
            {
                return _Cash;
            }
            set
            {
                OnCashChanging(value);
                ReportPropertyChanging("Cash");
                _Cash = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Cash");
                OnCashChanged();
            }
        }
        private Nullable<global::System.Int32> _Cash;
        partial void OnCashChanging(Nullable<global::System.Int32> value);
        partial void OnCashChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IsNormalEnum
        {
            get
            {
                return _IsNormalEnum;
            }
            set
            {
                OnIsNormalEnumChanging(value);
                ReportPropertyChanging("IsNormalEnum");
                _IsNormalEnum = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IsNormalEnum");
                OnIsNormalEnumChanged();
            }
        }
        private global::System.String _IsNormalEnum;
        partial void OnIsNormalEnumChanging(global::System.String value);
        partial void OnIsNormalEnumChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AbnormalInfo
        {
            get
            {
                return _AbnormalInfo;
            }
            set
            {
                OnAbnormalInfoChanging(value);
                ReportPropertyChanging("AbnormalInfo");
                _AbnormalInfo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AbnormalInfo");
                OnAbnormalInfoChanged();
            }
        }
        private global::System.String _AbnormalInfo;
        partial void OnAbnormalInfoChanging(global::System.String value);
        partial void OnAbnormalInfoChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsUse
        {
            get
            {
                return _IsUse;
            }
            set
            {
                OnIsUseChanging(value);
                ReportPropertyChanging("IsUse");
                _IsUse = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsUse");
                OnIsUseChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsUse;
        partial void OnIsUseChanging(Nullable<global::System.Boolean> value);
        partial void OnIsUseChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CampusNerdyModel", "FK_tb_CheckItem_tb_GoodInfoToSuperMarket", "tb_CheckItem")]
        public EntityCollection<tb_CheckItem> tb_CheckItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<tb_CheckItem>("CampusNerdyModel.FK_tb_CheckItem_tb_GoodInfoToSuperMarket", "tb_CheckItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<tb_CheckItem>("CampusNerdyModel.FK_tb_CheckItem_tb_GoodInfoToSuperMarket", "tb_CheckItem", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CampusNerdyModel", "FK_dealRequest_goodInfo_superMarket", "tb_DealRequest")]
        public EntityCollection<tb_DealRequest> tb_DealRequest
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<tb_DealRequest>("CampusNerdyModel.FK_dealRequest_goodInfo_superMarket", "tb_DealRequest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<tb_DealRequest>("CampusNerdyModel.FK_dealRequest_goodInfo_superMarket", "tb_DealRequest", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CampusNerdyModel", "FK_goodInfo_superMarket_tb_GoodInf", "tb_Good")]
        public tb_Good tb_Good
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tb_Good>("CampusNerdyModel.FK_goodInfo_superMarket_tb_GoodInf", "tb_Good").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tb_Good>("CampusNerdyModel.FK_goodInfo_superMarket_tb_GoodInf", "tb_Good").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<tb_Good> tb_GoodReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tb_Good>("CampusNerdyModel.FK_goodInfo_superMarket_tb_GoodInf", "tb_Good");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<tb_Good>("CampusNerdyModel.FK_goodInfo_superMarket_tb_GoodInf", "tb_Good", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CampusNerdyModel", "FK_goodInfo_superMarket_tb_SuperMaket", "tb_SuperMaket")]
        public tb_SuperMaket tb_SuperMaket
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tb_SuperMaket>("CampusNerdyModel.FK_goodInfo_superMarket_tb_SuperMaket", "tb_SuperMaket").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tb_SuperMaket>("CampusNerdyModel.FK_goodInfo_superMarket_tb_SuperMaket", "tb_SuperMaket").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<tb_SuperMaket> tb_SuperMaketReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tb_SuperMaket>("CampusNerdyModel.FK_goodInfo_superMarket_tb_SuperMaket", "tb_SuperMaket");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<tb_SuperMaket>("CampusNerdyModel.FK_goodInfo_superMarket_tb_SuperMaket", "tb_SuperMaket", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CampusNerdyModel", Name="tb_Group")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tb_Group : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 tb_Group 对象。
        /// </summary>
        /// <param name="groupId">GroupId 属性的初始值。</param>
        public static tb_Group Createtb_Group(global::System.String groupId)
        {
            tb_Group tb_Group = new tb_Group();
            tb_Group.GroupId = groupId;
            return tb_Group;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GroupId
        {
            get
            {
                return _GroupId;
            }
            set
            {
                if (_GroupId != value)
                {
                    OnGroupIdChanging(value);
                    ReportPropertyChanging("GroupId");
                    _GroupId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("GroupId");
                    OnGroupIdChanged();
                }
            }
        }
        private global::System.String _GroupId;
        partial void OnGroupIdChanging(global::System.String value);
        partial void OnGroupIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GroupName
        {
            get
            {
                return _GroupName;
            }
            set
            {
                OnGroupNameChanging(value);
                ReportPropertyChanging("GroupName");
                _GroupName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GroupName");
                OnGroupNameChanged();
            }
        }
        private global::System.String _GroupName;
        partial void OnGroupNameChanging(global::System.String value);
        partial void OnGroupNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AreaID
        {
            get
            {
                return _AreaID;
            }
            set
            {
                OnAreaIDChanging(value);
                ReportPropertyChanging("AreaID");
                _AreaID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AreaID");
                OnAreaIDChanged();
            }
        }
        private global::System.String _AreaID;
        partial void OnAreaIDChanging(global::System.String value);
        partial void OnAreaIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LeaderId
        {
            get
            {
                return _LeaderId;
            }
            set
            {
                OnLeaderIdChanging(value);
                ReportPropertyChanging("LeaderId");
                _LeaderId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LeaderId");
                OnLeaderIdChanged();
            }
        }
        private global::System.String _LeaderId;
        partial void OnLeaderIdChanging(global::System.String value);
        partial void OnLeaderIdChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CampusNerdyModel", "FK_areaInfo_tb_Group1", "tb_Area")]
        public tb_Area tb_Area
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tb_Area>("CampusNerdyModel.FK_areaInfo_tb_Group1", "tb_Area").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tb_Area>("CampusNerdyModel.FK_areaInfo_tb_Group1", "tb_Area").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<tb_Area> tb_AreaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tb_Area>("CampusNerdyModel.FK_areaInfo_tb_Group1", "tb_Area");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<tb_Area>("CampusNerdyModel.FK_areaInfo_tb_Group1", "tb_Area", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CampusNerdyModel", "FK_sender_tb_Group", "tb_Sender")]
        public EntityCollection<tb_Sender> tb_Sender
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<tb_Sender>("CampusNerdyModel.FK_sender_tb_Group", "tb_Sender");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<tb_Sender>("CampusNerdyModel.FK_sender_tb_Group", "tb_Sender", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CampusNerdyModel", "FK_tb_SuperMaket_tb_Group", "tb_SuperMaket")]
        public EntityCollection<tb_SuperMaket> tb_SuperMaket
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<tb_SuperMaket>("CampusNerdyModel.FK_tb_SuperMaket_tb_Group", "tb_SuperMaket");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<tb_SuperMaket>("CampusNerdyModel.FK_tb_SuperMaket_tb_Group", "tb_SuperMaket", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CampusNerdyModel", Name="tb_Module")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tb_Module : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 tb_Module 对象。
        /// </summary>
        /// <param name="moduleId">ModuleId 属性的初始值。</param>
        public static tb_Module Createtb_Module(global::System.String moduleId)
        {
            tb_Module tb_Module = new tb_Module();
            tb_Module.ModuleId = moduleId;
            return tb_Module;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ModuleId
        {
            get
            {
                return _ModuleId;
            }
            set
            {
                if (_ModuleId != value)
                {
                    OnModuleIdChanging(value);
                    ReportPropertyChanging("ModuleId");
                    _ModuleId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ModuleId");
                    OnModuleIdChanged();
                }
            }
        }
        private global::System.String _ModuleId;
        partial void OnModuleIdChanging(global::System.String value);
        partial void OnModuleIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ModuleName
        {
            get
            {
                return _ModuleName;
            }
            set
            {
                OnModuleNameChanging(value);
                ReportPropertyChanging("ModuleName");
                _ModuleName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ModuleName");
                OnModuleNameChanged();
            }
        }
        private global::System.String _ModuleName;
        partial void OnModuleNameChanging(global::System.String value);
        partial void OnModuleNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PagePath
        {
            get
            {
                return _PagePath;
            }
            set
            {
                OnPagePathChanging(value);
                ReportPropertyChanging("PagePath");
                _PagePath = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PagePath");
                OnPagePathChanged();
            }
        }
        private global::System.String _PagePath;
        partial void OnPagePathChanging(global::System.String value);
        partial void OnPagePathChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CampusNerdyModel", "FK_tb_Role_ModuleRelation_tb_Module1", "tb_RoleToModule")]
        public EntityCollection<tb_RoleToModule> tb_RoleToModule
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<tb_RoleToModule>("CampusNerdyModel.FK_tb_Role_ModuleRelation_tb_Module1", "tb_RoleToModule");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<tb_RoleToModule>("CampusNerdyModel.FK_tb_Role_ModuleRelation_tb_Module1", "tb_RoleToModule", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CampusNerdyModel", Name="tb_Role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tb_Role : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 tb_Role 对象。
        /// </summary>
        /// <param name="roleID">RoleID 属性的初始值。</param>
        public static tb_Role Createtb_Role(global::System.String roleID)
        {
            tb_Role tb_Role = new tb_Role();
            tb_Role.RoleID = roleID;
            return tb_Role;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                if (_RoleID != value)
                {
                    OnRoleIDChanging(value);
                    ReportPropertyChanging("RoleID");
                    _RoleID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("RoleID");
                    OnRoleIDChanged();
                }
            }
        }
        private global::System.String _RoleID;
        partial void OnRoleIDChanging(global::System.String value);
        partial void OnRoleIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RoleName
        {
            get
            {
                return _RoleName;
            }
            set
            {
                OnRoleNameChanging(value);
                ReportPropertyChanging("RoleName");
                _RoleName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RoleName");
                OnRoleNameChanged();
            }
        }
        private global::System.String _RoleName;
        partial void OnRoleNameChanging(global::System.String value);
        partial void OnRoleNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RoleType
        {
            get
            {
                return _RoleType;
            }
            set
            {
                OnRoleTypeChanging(value);
                ReportPropertyChanging("RoleType");
                _RoleType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RoleType");
                OnRoleTypeChanged();
            }
        }
        private global::System.String _RoleType;
        partial void OnRoleTypeChanging(global::System.String value);
        partial void OnRoleTypeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RoleDescribe
        {
            get
            {
                return _RoleDescribe;
            }
            set
            {
                OnRoleDescribeChanging(value);
                ReportPropertyChanging("RoleDescribe");
                _RoleDescribe = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RoleDescribe");
                OnRoleDescribeChanged();
            }
        }
        private global::System.String _RoleDescribe;
        partial void OnRoleDescribeChanging(global::System.String value);
        partial void OnRoleDescribeChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CampusNerdyModel", "FK_tb_Role_UserRelations_tb_Role", "tb_RoleToUser")]
        public EntityCollection<tb_RoleToUser> tb_RoleToUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<tb_RoleToUser>("CampusNerdyModel.FK_tb_Role_UserRelations_tb_Role", "tb_RoleToUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<tb_RoleToUser>("CampusNerdyModel.FK_tb_Role_UserRelations_tb_Role", "tb_RoleToUser", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CampusNerdyModel", Name="tb_RoleToModule")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tb_RoleToModule : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 tb_RoleToModule 对象。
        /// </summary>
        /// <param name="roleModuleId">RoleModuleId 属性的初始值。</param>
        public static tb_RoleToModule Createtb_RoleToModule(global::System.Int32 roleModuleId)
        {
            tb_RoleToModule tb_RoleToModule = new tb_RoleToModule();
            tb_RoleToModule.RoleModuleId = roleModuleId;
            return tb_RoleToModule;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleModuleId
        {
            get
            {
                return _RoleModuleId;
            }
            set
            {
                if (_RoleModuleId != value)
                {
                    OnRoleModuleIdChanging(value);
                    ReportPropertyChanging("RoleModuleId");
                    _RoleModuleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleModuleId");
                    OnRoleModuleIdChanged();
                }
            }
        }
        private global::System.Int32 _RoleModuleId;
        partial void OnRoleModuleIdChanging(global::System.Int32 value);
        partial void OnRoleModuleIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ModuleId
        {
            get
            {
                return _ModuleId;
            }
            set
            {
                OnModuleIdChanging(value);
                ReportPropertyChanging("ModuleId");
                _ModuleId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ModuleId");
                OnModuleIdChanged();
            }
        }
        private global::System.String _ModuleId;
        partial void OnModuleIdChanging(global::System.String value);
        partial void OnModuleIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RoleType
        {
            get
            {
                return _RoleType;
            }
            set
            {
                OnRoleTypeChanging(value);
                ReportPropertyChanging("RoleType");
                _RoleType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RoleType");
                OnRoleTypeChanged();
            }
        }
        private global::System.String _RoleType;
        partial void OnRoleTypeChanging(global::System.String value);
        partial void OnRoleTypeChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CampusNerdyModel", "FK_tb_Role_ModuleRelation_tb_Module1", "tb_Module")]
        public tb_Module tb_Module
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tb_Module>("CampusNerdyModel.FK_tb_Role_ModuleRelation_tb_Module1", "tb_Module").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tb_Module>("CampusNerdyModel.FK_tb_Role_ModuleRelation_tb_Module1", "tb_Module").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<tb_Module> tb_ModuleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tb_Module>("CampusNerdyModel.FK_tb_Role_ModuleRelation_tb_Module1", "tb_Module");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<tb_Module>("CampusNerdyModel.FK_tb_Role_ModuleRelation_tb_Module1", "tb_Module", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CampusNerdyModel", Name="tb_RoleToUser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tb_RoleToUser : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 tb_RoleToUser 对象。
        /// </summary>
        /// <param name="roleUserId">RoleUserId 属性的初始值。</param>
        public static tb_RoleToUser Createtb_RoleToUser(global::System.Int32 roleUserId)
        {
            tb_RoleToUser tb_RoleToUser = new tb_RoleToUser();
            tb_RoleToUser.RoleUserId = roleUserId;
            return tb_RoleToUser;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleUserId
        {
            get
            {
                return _RoleUserId;
            }
            set
            {
                if (_RoleUserId != value)
                {
                    OnRoleUserIdChanging(value);
                    ReportPropertyChanging("RoleUserId");
                    _RoleUserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleUserId");
                    OnRoleUserIdChanged();
                }
            }
        }
        private global::System.Int32 _RoleUserId;
        partial void OnRoleUserIdChanging(global::System.Int32 value);
        partial void OnRoleUserIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                OnRoleIDChanging(value);
                ReportPropertyChanging("RoleID");
                _RoleID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RoleID");
                OnRoleIDChanged();
            }
        }
        private global::System.String _RoleID;
        partial void OnRoleIDChanging(global::System.String value);
        partial void OnRoleIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.String _UserID;
        partial void OnUserIDChanging(global::System.String value);
        partial void OnUserIDChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CampusNerdyModel", "FK_tb_Role_UserRelations_tb_Role", "tb_Role")]
        public tb_Role tb_Role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tb_Role>("CampusNerdyModel.FK_tb_Role_UserRelations_tb_Role", "tb_Role").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tb_Role>("CampusNerdyModel.FK_tb_Role_UserRelations_tb_Role", "tb_Role").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<tb_Role> tb_RoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tb_Role>("CampusNerdyModel.FK_tb_Role_UserRelations_tb_Role", "tb_Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<tb_Role>("CampusNerdyModel.FK_tb_Role_UserRelations_tb_Role", "tb_Role", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CampusNerdyModel", "FK_tb_Role_UserRelations_tb_User", "tb_User")]
        public tb_User tb_User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tb_User>("CampusNerdyModel.FK_tb_Role_UserRelations_tb_User", "tb_User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tb_User>("CampusNerdyModel.FK_tb_Role_UserRelations_tb_User", "tb_User").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<tb_User> tb_UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tb_User>("CampusNerdyModel.FK_tb_Role_UserRelations_tb_User", "tb_User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<tb_User>("CampusNerdyModel.FK_tb_Role_UserRelations_tb_User", "tb_User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CampusNerdyModel", Name="tb_Sender")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tb_Sender : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 tb_Sender 对象。
        /// </summary>
        /// <param name="serderID">SerderID 属性的初始值。</param>
        public static tb_Sender Createtb_Sender(global::System.String serderID)
        {
            tb_Sender tb_Sender = new tb_Sender();
            tb_Sender.SerderID = serderID;
            return tb_Sender;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SerderID
        {
            get
            {
                return _SerderID;
            }
            set
            {
                if (_SerderID != value)
                {
                    OnSerderIDChanging(value);
                    ReportPropertyChanging("SerderID");
                    _SerderID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SerderID");
                    OnSerderIDChanged();
                }
            }
        }
        private global::System.String _SerderID;
        partial void OnSerderIDChanging(global::System.String value);
        partial void OnSerderIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> CanSendNow
        {
            get
            {
                return _CanSendNow;
            }
            set
            {
                OnCanSendNowChanging(value);
                ReportPropertyChanging("CanSendNow");
                _CanSendNow = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CanSendNow");
                OnCanSendNowChanged();
            }
        }
        private Nullable<global::System.Boolean> _CanSendNow;
        partial void OnCanSendNowChanging(Nullable<global::System.Boolean> value);
        partial void OnCanSendNowChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SenderAreaID
        {
            get
            {
                return _SenderAreaID;
            }
            set
            {
                OnSenderAreaIDChanging(value);
                ReportPropertyChanging("SenderAreaID");
                _SenderAreaID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SenderAreaID");
                OnSenderAreaIDChanged();
            }
        }
        private Nullable<global::System.Int32> _SenderAreaID;
        partial void OnSenderAreaIDChanging(Nullable<global::System.Int32> value);
        partial void OnSenderAreaIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GroupId
        {
            get
            {
                return _GroupId;
            }
            set
            {
                OnGroupIdChanging(value);
                ReportPropertyChanging("GroupId");
                _GroupId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GroupId");
                OnGroupIdChanged();
            }
        }
        private global::System.String _GroupId;
        partial void OnGroupIdChanging(global::System.String value);
        partial void OnGroupIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsUse
        {
            get
            {
                return _IsUse;
            }
            set
            {
                OnIsUseChanging(value);
                ReportPropertyChanging("IsUse");
                _IsUse = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsUse");
                OnIsUseChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsUse;
        partial void OnIsUseChanging(Nullable<global::System.Boolean> value);
        partial void OnIsUseChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CampusNerdyModel", "FK_sender_tb_Group", "tb_Group")]
        public tb_Group tb_Group
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tb_Group>("CampusNerdyModel.FK_sender_tb_Group", "tb_Group").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tb_Group>("CampusNerdyModel.FK_sender_tb_Group", "tb_Group").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<tb_Group> tb_GroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tb_Group>("CampusNerdyModel.FK_sender_tb_Group", "tb_Group");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<tb_Group>("CampusNerdyModel.FK_sender_tb_Group", "tb_Group", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CampusNerdyModel", Name="tb_SuperMaket")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tb_SuperMaket : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 tb_SuperMaket 对象。
        /// </summary>
        /// <param name="superMarketId">SuperMarketId 属性的初始值。</param>
        /// <param name="superMarketName">superMarketName 属性的初始值。</param>
        public static tb_SuperMaket Createtb_SuperMaket(global::System.Int32 superMarketId, global::System.String superMarketName)
        {
            tb_SuperMaket tb_SuperMaket = new tb_SuperMaket();
            tb_SuperMaket.SuperMarketId = superMarketId;
            tb_SuperMaket.superMarketName = superMarketName;
            return tb_SuperMaket;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SuperMarketId
        {
            get
            {
                return _SuperMarketId;
            }
            set
            {
                if (_SuperMarketId != value)
                {
                    OnSuperMarketIdChanging(value);
                    ReportPropertyChanging("SuperMarketId");
                    _SuperMarketId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SuperMarketId");
                    OnSuperMarketIdChanged();
                }
            }
        }
        private global::System.Int32 _SuperMarketId;
        partial void OnSuperMarketIdChanging(global::System.Int32 value);
        partial void OnSuperMarketIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String superMarketName
        {
            get
            {
                return _superMarketName;
            }
            set
            {
                OnsuperMarketNameChanging(value);
                ReportPropertyChanging("superMarketName");
                _superMarketName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("superMarketName");
                OnsuperMarketNameChanged();
            }
        }
        private global::System.String _superMarketName;
        partial void OnsuperMarketNameChanging(global::System.String value);
        partial void OnsuperMarketNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SuperDescription
        {
            get
            {
                return _SuperDescription;
            }
            set
            {
                OnSuperDescriptionChanging(value);
                ReportPropertyChanging("SuperDescription");
                _SuperDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SuperDescription");
                OnSuperDescriptionChanged();
            }
        }
        private global::System.String _SuperDescription;
        partial void OnSuperDescriptionChanging(global::System.String value);
        partial void OnSuperDescriptionChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AreaId
        {
            get
            {
                return _AreaId;
            }
            set
            {
                OnAreaIdChanging(value);
                ReportPropertyChanging("AreaId");
                _AreaId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AreaId");
                OnAreaIdChanged();
            }
        }
        private global::System.String _AreaId;
        partial void OnAreaIdChanging(global::System.String value);
        partial void OnAreaIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GroupId
        {
            get
            {
                return _GroupId;
            }
            set
            {
                OnGroupIdChanging(value);
                ReportPropertyChanging("GroupId");
                _GroupId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GroupId");
                OnGroupIdChanged();
            }
        }
        private global::System.String _GroupId;
        partial void OnGroupIdChanging(global::System.String value);
        partial void OnGroupIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsUse
        {
            get
            {
                return _IsUse;
            }
            set
            {
                OnIsUseChanging(value);
                ReportPropertyChanging("IsUse");
                _IsUse = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsUse");
                OnIsUseChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsUse;
        partial void OnIsUseChanging(Nullable<global::System.Boolean> value);
        partial void OnIsUseChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CampusNerdyModel", "FK_tb_SuperMaket_tb_Area", "tb_Area")]
        public tb_Area tb_Area
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tb_Area>("CampusNerdyModel.FK_tb_SuperMaket_tb_Area", "tb_Area").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tb_Area>("CampusNerdyModel.FK_tb_SuperMaket_tb_Area", "tb_Area").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<tb_Area> tb_AreaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tb_Area>("CampusNerdyModel.FK_tb_SuperMaket_tb_Area", "tb_Area");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<tb_Area>("CampusNerdyModel.FK_tb_SuperMaket_tb_Area", "tb_Area", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CampusNerdyModel", "FK_goodInfo_superMarket_tb_SuperMaket", "tb_GoodInfoToSuperMarket")]
        public EntityCollection<tb_GoodInfoToSuperMarket> tb_GoodInfoToSuperMarket
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<tb_GoodInfoToSuperMarket>("CampusNerdyModel.FK_goodInfo_superMarket_tb_SuperMaket", "tb_GoodInfoToSuperMarket");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<tb_GoodInfoToSuperMarket>("CampusNerdyModel.FK_goodInfo_superMarket_tb_SuperMaket", "tb_GoodInfoToSuperMarket", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CampusNerdyModel", "FK_tb_SuperMaket_tb_Group", "tb_Group")]
        public tb_Group tb_Group
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tb_Group>("CampusNerdyModel.FK_tb_SuperMaket_tb_Group", "tb_Group").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tb_Group>("CampusNerdyModel.FK_tb_SuperMaket_tb_Group", "tb_Group").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<tb_Group> tb_GroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tb_Group>("CampusNerdyModel.FK_tb_SuperMaket_tb_Group", "tb_Group");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<tb_Group>("CampusNerdyModel.FK_tb_SuperMaket_tb_Group", "tb_Group", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CampusNerdyModel", Name="tb_User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tb_User : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 tb_User 对象。
        /// </summary>
        /// <param name="userID">UserID 属性的初始值。</param>
        public static tb_User Createtb_User(global::System.String userID)
        {
            tb_User tb_User = new tb_User();
            tb_User.UserID = userID;
            return tb_User;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.String _UserID;
        partial void OnUserIDChanging(global::System.String value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Hashed_PassWord
        {
            get
            {
                return _Hashed_PassWord;
            }
            set
            {
                OnHashed_PassWordChanging(value);
                ReportPropertyChanging("Hashed_PassWord");
                _Hashed_PassWord = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Hashed_PassWord");
                OnHashed_PassWordChanged();
            }
        }
        private global::System.String _Hashed_PassWord;
        partial void OnHashed_PassWordChanging(global::System.String value);
        partial void OnHashed_PassWordChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Salt
        {
            get
            {
                return _Salt;
            }
            set
            {
                OnSaltChanging(value);
                ReportPropertyChanging("Salt");
                _Salt = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Salt");
                OnSaltChanged();
            }
        }
        private global::System.String _Salt;
        partial void OnSaltChanging(global::System.String value);
        partial void OnSaltChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreateDate;
        partial void OnCreateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserDescribe
        {
            get
            {
                return _UserDescribe;
            }
            set
            {
                OnUserDescribeChanging(value);
                ReportPropertyChanging("UserDescribe");
                _UserDescribe = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserDescribe");
                OnUserDescribeChanged();
            }
        }
        private global::System.String _UserDescribe;
        partial void OnUserDescribeChanging(global::System.String value);
        partial void OnUserDescribeChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CampusNerdyModel", "FK_tb_Role_UserRelations_tb_User", "tb_RoleToUser")]
        public EntityCollection<tb_RoleToUser> tb_RoleToUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<tb_RoleToUser>("CampusNerdyModel.FK_tb_Role_UserRelations_tb_User", "tb_RoleToUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<tb_RoleToUser>("CampusNerdyModel.FK_tb_Role_UserRelations_tb_User", "tb_RoleToUser", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CampusNerdyModel", "FK_tb_UserInfo_tb_User", "tb_UserInfo")]
        public EntityCollection<tb_UserInfo> tb_UserInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<tb_UserInfo>("CampusNerdyModel.FK_tb_UserInfo_tb_User", "tb_UserInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<tb_UserInfo>("CampusNerdyModel.FK_tb_UserInfo_tb_User", "tb_UserInfo", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CampusNerdyModel", Name="tb_UserInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tb_UserInfo : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 tb_UserInfo 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        public static tb_UserInfo Createtb_UserInfo(global::System.Int32 id)
        {
            tb_UserInfo tb_UserInfo = new tb_UserInfo();
            tb_UserInfo.ID = id;
            return tb_UserInfo;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.String _UserID;
        partial void OnUserIDChanging(global::System.String value);
        partial void OnUserIDChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CampusNerdyModel", "FK_tb_UserInfo_tb_User", "tb_User")]
        public tb_User tb_User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tb_User>("CampusNerdyModel.FK_tb_UserInfo_tb_User", "tb_User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tb_User>("CampusNerdyModel.FK_tb_UserInfo_tb_User", "tb_User").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<tb_User> tb_UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tb_User>("CampusNerdyModel.FK_tb_UserInfo_tb_User", "tb_User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<tb_User>("CampusNerdyModel.FK_tb_UserInfo_tb_User", "tb_User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CampusNerdyModel", Name="View_UserAndRole")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class View_UserAndRole : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 View_UserAndRole 对象。
        /// </summary>
        /// <param name="userID">UserID 属性的初始值。</param>
        public static View_UserAndRole CreateView_UserAndRole(global::System.String userID)
        {
            View_UserAndRole view_UserAndRole = new View_UserAndRole();
            view_UserAndRole.UserID = userID;
            return view_UserAndRole;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Hashed_PassWord
        {
            get
            {
                return _Hashed_PassWord;
            }
            set
            {
                OnHashed_PassWordChanging(value);
                ReportPropertyChanging("Hashed_PassWord");
                _Hashed_PassWord = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Hashed_PassWord");
                OnHashed_PassWordChanged();
            }
        }
        private global::System.String _Hashed_PassWord;
        partial void OnHashed_PassWordChanging(global::System.String value);
        partial void OnHashed_PassWordChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Salt
        {
            get
            {
                return _Salt;
            }
            set
            {
                OnSaltChanging(value);
                ReportPropertyChanging("Salt");
                _Salt = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Salt");
                OnSaltChanged();
            }
        }
        private global::System.String _Salt;
        partial void OnSaltChanging(global::System.String value);
        partial void OnSaltChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreateDate;
        partial void OnCreateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserDescribe
        {
            get
            {
                return _UserDescribe;
            }
            set
            {
                OnUserDescribeChanging(value);
                ReportPropertyChanging("UserDescribe");
                _UserDescribe = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserDescribe");
                OnUserDescribeChanged();
            }
        }
        private global::System.String _UserDescribe;
        partial void OnUserDescribeChanging(global::System.String value);
        partial void OnUserDescribeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.String _UserID;
        partial void OnUserIDChanging(global::System.String value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                OnRoleIDChanging(value);
                ReportPropertyChanging("RoleID");
                _RoleID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RoleID");
                OnRoleIDChanged();
            }
        }
        private global::System.String _RoleID;
        partial void OnRoleIDChanging(global::System.String value);
        partial void OnRoleIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RoleName
        {
            get
            {
                return _RoleName;
            }
            set
            {
                OnRoleNameChanging(value);
                ReportPropertyChanging("RoleName");
                _RoleName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RoleName");
                OnRoleNameChanged();
            }
        }
        private global::System.String _RoleName;
        partial void OnRoleNameChanging(global::System.String value);
        partial void OnRoleNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RoleType
        {
            get
            {
                return _RoleType;
            }
            set
            {
                OnRoleTypeChanging(value);
                ReportPropertyChanging("RoleType");
                _RoleType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RoleType");
                OnRoleTypeChanged();
            }
        }
        private global::System.String _RoleType;
        partial void OnRoleTypeChanging(global::System.String value);
        partial void OnRoleTypeChanged();

        #endregion

    
    }

    #endregion

    
}
