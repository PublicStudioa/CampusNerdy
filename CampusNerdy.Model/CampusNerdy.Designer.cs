//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM 关系源元数据

[assembly: EdmRelationshipAttribute("CampusNerdyModel", "FK_sender_areaInfo", "areaInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CampusNerdy.Model.areaInfo), "sender", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CampusNerdy.Model.sender), true)]
[assembly: EdmRelationshipAttribute("CampusNerdyModel", "FK_tb_SuperMaket_areaInfo", "areaInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CampusNerdy.Model.areaInfo), "tb_SuperMaket", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CampusNerdy.Model.tb_SuperMaket), true)]
[assembly: EdmRelationshipAttribute("CampusNerdyModel", "FK_tb_SuperMaket_areaInfo1", "areaInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CampusNerdy.Model.areaInfo), "tb_SuperMaket", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CampusNerdy.Model.tb_SuperMaket), true)]
[assembly: EdmRelationshipAttribute("CampusNerdyModel", "FK_dealRequest_goodInfo_superMarket", "goodInfo_superMarket", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CampusNerdy.Model.goodInfo_superMarket), "dealRequest", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CampusNerdy.Model.dealRequest), true)]
[assembly: EdmRelationshipAttribute("CampusNerdyModel", "FK_dealRequest_sender", "sender", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CampusNerdy.Model.sender), "dealRequest", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CampusNerdy.Model.dealRequest), true)]
[assembly: EdmRelationshipAttribute("CampusNerdyModel", "FK_goodInfo_superMarket_tb_GoodInf", "tb_GoodInf", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CampusNerdy.Model.tb_GoodInf), "goodInfo_superMarket", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CampusNerdy.Model.goodInfo_superMarket), true)]
[assembly: EdmRelationshipAttribute("CampusNerdyModel", "FK_goodInfo_superMarket_tb_SuperMaket", "tb_SuperMaket", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CampusNerdy.Model.tb_SuperMaket), "goodInfo_superMarket", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CampusNerdy.Model.goodInfo_superMarket), true)]
[assembly: EdmRelationshipAttribute("CampusNerdyModel", "FK_senderForMarket_tb_SuperMaket", "tb_SuperMaket", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CampusNerdy.Model.tb_SuperMaket), "senderForMarket", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CampusNerdy.Model.senderForMarket), true)]
[assembly: EdmRelationshipAttribute("CampusNerdyModel", "FK_tb_Role_UserRelations_tb_Role", "tb_Role", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CampusNerdy.Model.tb_Role), "tb_Role_UserRelations", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CampusNerdy.Model.tb_Role_UserRelations), true)]
[assembly: EdmRelationshipAttribute("CampusNerdyModel", "FK_tb_Role_UserRelations_tb_User", "tb_User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CampusNerdy.Model.tb_User), "tb_Role_UserRelations", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CampusNerdy.Model.tb_Role_UserRelations), true)]
[assembly: EdmRelationshipAttribute("CampusNerdyModel", "FK_tb_UserInfo_tb_User", "tb_User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CampusNerdy.Model.tb_User), "tb_UserInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CampusNerdy.Model.tb_UserInfo), true)]

#endregion

namespace CampusNerdy.Model
{
    #region 上下文
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    public partial class CampusNerdyEntities : ObjectContext
    {
        #region 构造函数
    
        /// <summary>
        /// 请使用应用程序配置文件的“CampusNerdyEntities”部分中的连接字符串初始化新 CampusNerdyEntities 对象。
        /// </summary>
        public CampusNerdyEntities() : base("name=CampusNerdyEntities", "CampusNerdyEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 CampusNerdyEntities 对象。
        /// </summary>
        public CampusNerdyEntities(string connectionString) : base(connectionString, "CampusNerdyEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 CampusNerdyEntities 对象。
        /// </summary>
        public CampusNerdyEntities(EntityConnection connection) : base(connection, "CampusNerdyEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 分部方法
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<areaInfo> areaInfo
        {
            get
            {
                if ((_areaInfo == null))
                {
                    _areaInfo = base.CreateObjectSet<areaInfo>("areaInfo");
                }
                return _areaInfo;
            }
        }
        private ObjectSet<areaInfo> _areaInfo;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<dealHistory> dealHistory
        {
            get
            {
                if ((_dealHistory == null))
                {
                    _dealHistory = base.CreateObjectSet<dealHistory>("dealHistory");
                }
                return _dealHistory;
            }
        }
        private ObjectSet<dealHistory> _dealHistory;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<dealRequest> dealRequest
        {
            get
            {
                if ((_dealRequest == null))
                {
                    _dealRequest = base.CreateObjectSet<dealRequest>("dealRequest");
                }
                return _dealRequest;
            }
        }
        private ObjectSet<dealRequest> _dealRequest;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<goodInfo_superMarket> goodInfo_superMarket
        {
            get
            {
                if ((_goodInfo_superMarket == null))
                {
                    _goodInfo_superMarket = base.CreateObjectSet<goodInfo_superMarket>("goodInfo_superMarket");
                }
                return _goodInfo_superMarket;
            }
        }
        private ObjectSet<goodInfo_superMarket> _goodInfo_superMarket;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<sender> sender
        {
            get
            {
                if ((_sender == null))
                {
                    _sender = base.CreateObjectSet<sender>("sender");
                }
                return _sender;
            }
        }
        private ObjectSet<sender> _sender;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<senderForMarket> senderForMarket
        {
            get
            {
                if ((_senderForMarket == null))
                {
                    _senderForMarket = base.CreateObjectSet<senderForMarket>("senderForMarket");
                }
                return _senderForMarket;
            }
        }
        private ObjectSet<senderForMarket> _senderForMarket;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<sysdiagrams> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagrams>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagrams> _sysdiagrams;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<tb_Dictionary> tb_Dictionary
        {
            get
            {
                if ((_tb_Dictionary == null))
                {
                    _tb_Dictionary = base.CreateObjectSet<tb_Dictionary>("tb_Dictionary");
                }
                return _tb_Dictionary;
            }
        }
        private ObjectSet<tb_Dictionary> _tb_Dictionary;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<tb_GoodInf> tb_GoodInf
        {
            get
            {
                if ((_tb_GoodInf == null))
                {
                    _tb_GoodInf = base.CreateObjectSet<tb_GoodInf>("tb_GoodInf");
                }
                return _tb_GoodInf;
            }
        }
        private ObjectSet<tb_GoodInf> _tb_GoodInf;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<tb_Role> tb_Role
        {
            get
            {
                if ((_tb_Role == null))
                {
                    _tb_Role = base.CreateObjectSet<tb_Role>("tb_Role");
                }
                return _tb_Role;
            }
        }
        private ObjectSet<tb_Role> _tb_Role;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<tb_Role_UserRelations> tb_Role_UserRelations
        {
            get
            {
                if ((_tb_Role_UserRelations == null))
                {
                    _tb_Role_UserRelations = base.CreateObjectSet<tb_Role_UserRelations>("tb_Role_UserRelations");
                }
                return _tb_Role_UserRelations;
            }
        }
        private ObjectSet<tb_Role_UserRelations> _tb_Role_UserRelations;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<tb_SuperMaket> tb_SuperMaket
        {
            get
            {
                if ((_tb_SuperMaket == null))
                {
                    _tb_SuperMaket = base.CreateObjectSet<tb_SuperMaket>("tb_SuperMaket");
                }
                return _tb_SuperMaket;
            }
        }
        private ObjectSet<tb_SuperMaket> _tb_SuperMaket;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<tb_User> tb_User
        {
            get
            {
                if ((_tb_User == null))
                {
                    _tb_User = base.CreateObjectSet<tb_User>("tb_User");
                }
                return _tb_User;
            }
        }
        private ObjectSet<tb_User> _tb_User;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<tb_UserInfo> tb_UserInfo
        {
            get
            {
                if ((_tb_UserInfo == null))
                {
                    _tb_UserInfo = base.CreateObjectSet<tb_UserInfo>("tb_UserInfo");
                }
                return _tb_UserInfo;
            }
        }
        private ObjectSet<tb_UserInfo> _tb_UserInfo;

        #endregion

        #region AddTo 方法
    
        /// <summary>
        /// 用于向 areaInfo EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToareaInfo(areaInfo areaInfo)
        {
            base.AddObject("areaInfo", areaInfo);
        }
    
        /// <summary>
        /// 用于向 dealHistory EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTodealHistory(dealHistory dealHistory)
        {
            base.AddObject("dealHistory", dealHistory);
        }
    
        /// <summary>
        /// 用于向 dealRequest EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTodealRequest(dealRequest dealRequest)
        {
            base.AddObject("dealRequest", dealRequest);
        }
    
        /// <summary>
        /// 用于向 goodInfo_superMarket EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTogoodInfo_superMarket(goodInfo_superMarket goodInfo_superMarket)
        {
            base.AddObject("goodInfo_superMarket", goodInfo_superMarket);
        }
    
        /// <summary>
        /// 用于向 sender EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTosender(sender sender)
        {
            base.AddObject("sender", sender);
        }
    
        /// <summary>
        /// 用于向 senderForMarket EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTosenderForMarket(senderForMarket senderForMarket)
        {
            base.AddObject("senderForMarket", senderForMarket);
        }
    
        /// <summary>
        /// 用于向 sysdiagrams EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTosysdiagrams(sysdiagrams sysdiagrams)
        {
            base.AddObject("sysdiagrams", sysdiagrams);
        }
    
        /// <summary>
        /// 用于向 tb_Dictionary EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTotb_Dictionary(tb_Dictionary tb_Dictionary)
        {
            base.AddObject("tb_Dictionary", tb_Dictionary);
        }
    
        /// <summary>
        /// 用于向 tb_GoodInf EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTotb_GoodInf(tb_GoodInf tb_GoodInf)
        {
            base.AddObject("tb_GoodInf", tb_GoodInf);
        }
    
        /// <summary>
        /// 用于向 tb_Role EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTotb_Role(tb_Role tb_Role)
        {
            base.AddObject("tb_Role", tb_Role);
        }
    
        /// <summary>
        /// 用于向 tb_Role_UserRelations EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTotb_Role_UserRelations(tb_Role_UserRelations tb_Role_UserRelations)
        {
            base.AddObject("tb_Role_UserRelations", tb_Role_UserRelations);
        }
    
        /// <summary>
        /// 用于向 tb_SuperMaket EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTotb_SuperMaket(tb_SuperMaket tb_SuperMaket)
        {
            base.AddObject("tb_SuperMaket", tb_SuperMaket);
        }
    
        /// <summary>
        /// 用于向 tb_User EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTotb_User(tb_User tb_User)
        {
            base.AddObject("tb_User", tb_User);
        }
    
        /// <summary>
        /// 用于向 tb_UserInfo EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTotb_UserInfo(tb_UserInfo tb_UserInfo)
        {
            base.AddObject("tb_UserInfo", tb_UserInfo);
        }

        #endregion

    }

    #endregion

    #region 实体
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CampusNerdyModel", Name="areaInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class areaInfo : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 areaInfo 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        public static areaInfo CreateareaInfo(global::System.Int32 id)
        {
            areaInfo areaInfo = new areaInfo();
            areaInfo.id = id;
            return areaInfo;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String areaID
        {
            get
            {
                return _areaID;
            }
            set
            {
                OnareaIDChanging(value);
                ReportPropertyChanging("areaID");
                _areaID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("areaID");
                OnareaIDChanged();
            }
        }
        private global::System.String _areaID;
        partial void OnareaIDChanging(global::System.String value);
        partial void OnareaIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String areaInfo1
        {
            get
            {
                return _areaInfo1;
            }
            set
            {
                OnareaInfo1Changing(value);
                ReportPropertyChanging("areaInfo1");
                _areaInfo1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("areaInfo1");
                OnareaInfo1Changed();
            }
        }
        private global::System.String _areaInfo1;
        partial void OnareaInfo1Changing(global::System.String value);
        partial void OnareaInfo1Changed();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CampusNerdyModel", "FK_sender_areaInfo", "sender")]
        public EntityCollection<sender> sender
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<sender>("CampusNerdyModel.FK_sender_areaInfo", "sender");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<sender>("CampusNerdyModel.FK_sender_areaInfo", "sender", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CampusNerdyModel", "FK_tb_SuperMaket_areaInfo", "tb_SuperMaket")]
        public EntityCollection<tb_SuperMaket> tb_SuperMaket
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<tb_SuperMaket>("CampusNerdyModel.FK_tb_SuperMaket_areaInfo", "tb_SuperMaket");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<tb_SuperMaket>("CampusNerdyModel.FK_tb_SuperMaket_areaInfo", "tb_SuperMaket", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CampusNerdyModel", "FK_tb_SuperMaket_areaInfo1", "tb_SuperMaket")]
        public EntityCollection<tb_SuperMaket> tb_SuperMaket1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<tb_SuperMaket>("CampusNerdyModel.FK_tb_SuperMaket_areaInfo1", "tb_SuperMaket");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<tb_SuperMaket>("CampusNerdyModel.FK_tb_SuperMaket_areaInfo1", "tb_SuperMaket", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CampusNerdyModel", Name="dealHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class dealHistory : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 dealHistory 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        public static dealHistory CreatedealHistory(global::System.Int32 id)
        {
            dealHistory dealHistory = new dealHistory();
            dealHistory.id = id;
            return dealHistory;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String senderID
        {
            get
            {
                return _senderID;
            }
            set
            {
                OnsenderIDChanging(value);
                ReportPropertyChanging("senderID");
                _senderID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("senderID");
                OnsenderIDChanged();
            }
        }
        private global::System.String _senderID;
        partial void OnsenderIDChanging(global::System.String value);
        partial void OnsenderIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> dealRequestID
        {
            get
            {
                return _dealRequestID;
            }
            set
            {
                OndealRequestIDChanging(value);
                ReportPropertyChanging("dealRequestID");
                _dealRequestID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("dealRequestID");
                OndealRequestIDChanged();
            }
        }
        private Nullable<global::System.Int32> _dealRequestID;
        partial void OndealRequestIDChanging(Nullable<global::System.Int32> value);
        partial void OndealRequestIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> hasDone
        {
            get
            {
                return _hasDone;
            }
            set
            {
                OnhasDoneChanging(value);
                ReportPropertyChanging("hasDone");
                _hasDone = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("hasDone");
                OnhasDoneChanged();
            }
        }
        private Nullable<global::System.Int32> _hasDone;
        partial void OnhasDoneChanging(Nullable<global::System.Int32> value);
        partial void OnhasDoneChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String hasDoneInfo
        {
            get
            {
                return _hasDoneInfo;
            }
            set
            {
                OnhasDoneInfoChanging(value);
                ReportPropertyChanging("hasDoneInfo");
                _hasDoneInfo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("hasDoneInfo");
                OnhasDoneInfoChanged();
            }
        }
        private global::System.String _hasDoneInfo;
        partial void OnhasDoneInfoChanging(global::System.String value);
        partial void OnhasDoneInfoChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> singleMarketCount
        {
            get
            {
                return _singleMarketCount;
            }
            set
            {
                OnsingleMarketCountChanging(value);
                ReportPropertyChanging("singleMarketCount");
                _singleMarketCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("singleMarketCount");
                OnsingleMarketCountChanged();
            }
        }
        private Nullable<global::System.Int32> _singleMarketCount;
        partial void OnsingleMarketCountChanging(Nullable<global::System.Int32> value);
        partial void OnsingleMarketCountChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> cash
        {
            get
            {
                return _cash;
            }
            set
            {
                OncashChanging(value);
                ReportPropertyChanging("cash");
                _cash = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("cash");
                OncashChanged();
            }
        }
        private Nullable<global::System.Int32> _cash;
        partial void OncashChanging(Nullable<global::System.Int32> value);
        partial void OncashChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CampusNerdyModel", Name="dealRequest")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class dealRequest : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 dealRequest 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        public static dealRequest CreatedealRequest(global::System.Int32 id)
        {
            dealRequest dealRequest = new dealRequest();
            dealRequest.id = id;
            return dealRequest;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> requestGoodsID
        {
            get
            {
                return _requestGoodsID;
            }
            set
            {
                OnrequestGoodsIDChanging(value);
                ReportPropertyChanging("requestGoodsID");
                _requestGoodsID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("requestGoodsID");
                OnrequestGoodsIDChanged();
            }
        }
        private Nullable<global::System.Int32> _requestGoodsID;
        partial void OnrequestGoodsIDChanging(Nullable<global::System.Int32> value);
        partial void OnrequestGoodsIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> cash
        {
            get
            {
                return _cash;
            }
            set
            {
                OncashChanging(value);
                ReportPropertyChanging("cash");
                _cash = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("cash");
                OncashChanged();
            }
        }
        private Nullable<global::System.Int32> _cash;
        partial void OncashChanging(Nullable<global::System.Int32> value);
        partial void OncashChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> state
        {
            get
            {
                return _state;
            }
            set
            {
                OnstateChanging(value);
                ReportPropertyChanging("state");
                _state = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("state");
                OnstateChanged();
            }
        }
        private Nullable<global::System.Int32> _state;
        partial void OnstateChanging(Nullable<global::System.Int32> value);
        partial void OnstateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> senderID
        {
            get
            {
                return _senderID;
            }
            set
            {
                OnsenderIDChanging(value);
                ReportPropertyChanging("senderID");
                _senderID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("senderID");
                OnsenderIDChanged();
            }
        }
        private Nullable<global::System.Int32> _senderID;
        partial void OnsenderIDChanging(Nullable<global::System.Int32> value);
        partial void OnsenderIDChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CampusNerdyModel", "FK_dealRequest_goodInfo_superMarket", "goodInfo_superMarket")]
        public goodInfo_superMarket goodInfo_superMarket
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<goodInfo_superMarket>("CampusNerdyModel.FK_dealRequest_goodInfo_superMarket", "goodInfo_superMarket").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<goodInfo_superMarket>("CampusNerdyModel.FK_dealRequest_goodInfo_superMarket", "goodInfo_superMarket").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<goodInfo_superMarket> goodInfo_superMarketReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<goodInfo_superMarket>("CampusNerdyModel.FK_dealRequest_goodInfo_superMarket", "goodInfo_superMarket");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<goodInfo_superMarket>("CampusNerdyModel.FK_dealRequest_goodInfo_superMarket", "goodInfo_superMarket", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CampusNerdyModel", "FK_dealRequest_sender", "sender")]
        public sender sender
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<sender>("CampusNerdyModel.FK_dealRequest_sender", "sender").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<sender>("CampusNerdyModel.FK_dealRequest_sender", "sender").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<sender> senderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<sender>("CampusNerdyModel.FK_dealRequest_sender", "sender");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<sender>("CampusNerdyModel.FK_dealRequest_sender", "sender", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CampusNerdyModel", Name="goodInfo_superMarket")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class goodInfo_superMarket : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 goodInfo_superMarket 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        public static goodInfo_superMarket CreategoodInfo_superMarket(global::System.Int32 id)
        {
            goodInfo_superMarket goodInfo_superMarket = new goodInfo_superMarket();
            goodInfo_superMarket.id = id;
            return goodInfo_superMarket;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> goodInfoID
        {
            get
            {
                return _goodInfoID;
            }
            set
            {
                OngoodInfoIDChanging(value);
                ReportPropertyChanging("goodInfoID");
                _goodInfoID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("goodInfoID");
                OngoodInfoIDChanged();
            }
        }
        private Nullable<global::System.Int32> _goodInfoID;
        partial void OngoodInfoIDChanging(Nullable<global::System.Int32> value);
        partial void OngoodInfoIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> superMarketID
        {
            get
            {
                return _superMarketID;
            }
            set
            {
                OnsuperMarketIDChanging(value);
                ReportPropertyChanging("superMarketID");
                _superMarketID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("superMarketID");
                OnsuperMarketIDChanged();
            }
        }
        private Nullable<global::System.Int32> _superMarketID;
        partial void OnsuperMarketIDChanging(Nullable<global::System.Int32> value);
        partial void OnsuperMarketIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String isNormalEnum
        {
            get
            {
                return _isNormalEnum;
            }
            set
            {
                OnisNormalEnumChanging(value);
                ReportPropertyChanging("isNormalEnum");
                _isNormalEnum = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("isNormalEnum");
                OnisNormalEnumChanged();
            }
        }
        private global::System.String _isNormalEnum;
        partial void OnisNormalEnumChanging(global::System.String value);
        partial void OnisNormalEnumChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String abnormalInfo
        {
            get
            {
                return _abnormalInfo;
            }
            set
            {
                OnabnormalInfoChanging(value);
                ReportPropertyChanging("abnormalInfo");
                _abnormalInfo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("abnormalInfo");
                OnabnormalInfoChanged();
            }
        }
        private global::System.String _abnormalInfo;
        partial void OnabnormalInfoChanging(global::System.String value);
        partial void OnabnormalInfoChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> isUse
        {
            get
            {
                return _isUse;
            }
            set
            {
                OnisUseChanging(value);
                ReportPropertyChanging("isUse");
                _isUse = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("isUse");
                OnisUseChanged();
            }
        }
        private Nullable<global::System.Boolean> _isUse;
        partial void OnisUseChanging(Nullable<global::System.Boolean> value);
        partial void OnisUseChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CampusNerdyModel", "FK_dealRequest_goodInfo_superMarket", "dealRequest")]
        public EntityCollection<dealRequest> dealRequest
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<dealRequest>("CampusNerdyModel.FK_dealRequest_goodInfo_superMarket", "dealRequest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<dealRequest>("CampusNerdyModel.FK_dealRequest_goodInfo_superMarket", "dealRequest", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CampusNerdyModel", "FK_goodInfo_superMarket_tb_GoodInf", "tb_GoodInf")]
        public tb_GoodInf tb_GoodInf
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tb_GoodInf>("CampusNerdyModel.FK_goodInfo_superMarket_tb_GoodInf", "tb_GoodInf").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tb_GoodInf>("CampusNerdyModel.FK_goodInfo_superMarket_tb_GoodInf", "tb_GoodInf").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<tb_GoodInf> tb_GoodInfReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tb_GoodInf>("CampusNerdyModel.FK_goodInfo_superMarket_tb_GoodInf", "tb_GoodInf");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<tb_GoodInf>("CampusNerdyModel.FK_goodInfo_superMarket_tb_GoodInf", "tb_GoodInf", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CampusNerdyModel", "FK_goodInfo_superMarket_tb_SuperMaket", "tb_SuperMaket")]
        public tb_SuperMaket tb_SuperMaket
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tb_SuperMaket>("CampusNerdyModel.FK_goodInfo_superMarket_tb_SuperMaket", "tb_SuperMaket").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tb_SuperMaket>("CampusNerdyModel.FK_goodInfo_superMarket_tb_SuperMaket", "tb_SuperMaket").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<tb_SuperMaket> tb_SuperMaketReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tb_SuperMaket>("CampusNerdyModel.FK_goodInfo_superMarket_tb_SuperMaket", "tb_SuperMaket");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<tb_SuperMaket>("CampusNerdyModel.FK_goodInfo_superMarket_tb_SuperMaket", "tb_SuperMaket", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CampusNerdyModel", Name="sender")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sender : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 sender 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        public static sender Createsender(global::System.Int32 id)
        {
            sender sender = new sender();
            sender.id = id;
            return sender;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String serderID_FromUser
        {
            get
            {
                return _serderID_FromUser;
            }
            set
            {
                OnserderID_FromUserChanging(value);
                ReportPropertyChanging("serderID_FromUser");
                _serderID_FromUser = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("serderID_FromUser");
                OnserderID_FromUserChanged();
            }
        }
        private global::System.String _serderID_FromUser;
        partial void OnserderID_FromUserChanging(global::System.String value);
        partial void OnserderID_FromUserChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> isUse
        {
            get
            {
                return _isUse;
            }
            set
            {
                OnisUseChanging(value);
                ReportPropertyChanging("isUse");
                _isUse = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("isUse");
                OnisUseChanged();
            }
        }
        private Nullable<global::System.Boolean> _isUse;
        partial void OnisUseChanging(Nullable<global::System.Boolean> value);
        partial void OnisUseChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> canSendNow
        {
            get
            {
                return _canSendNow;
            }
            set
            {
                OncanSendNowChanging(value);
                ReportPropertyChanging("canSendNow");
                _canSendNow = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("canSendNow");
                OncanSendNowChanged();
            }
        }
        private Nullable<global::System.Boolean> _canSendNow;
        partial void OncanSendNowChanging(Nullable<global::System.Boolean> value);
        partial void OncanSendNowChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> senderAreaID
        {
            get
            {
                return _senderAreaID;
            }
            set
            {
                OnsenderAreaIDChanging(value);
                ReportPropertyChanging("senderAreaID");
                _senderAreaID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("senderAreaID");
                OnsenderAreaIDChanged();
            }
        }
        private Nullable<global::System.Int32> _senderAreaID;
        partial void OnsenderAreaIDChanging(Nullable<global::System.Int32> value);
        partial void OnsenderAreaIDChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CampusNerdyModel", "FK_sender_areaInfo", "areaInfo")]
        public areaInfo areaInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<areaInfo>("CampusNerdyModel.FK_sender_areaInfo", "areaInfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<areaInfo>("CampusNerdyModel.FK_sender_areaInfo", "areaInfo").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<areaInfo> areaInfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<areaInfo>("CampusNerdyModel.FK_sender_areaInfo", "areaInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<areaInfo>("CampusNerdyModel.FK_sender_areaInfo", "areaInfo", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CampusNerdyModel", "FK_dealRequest_sender", "dealRequest")]
        public EntityCollection<dealRequest> dealRequest
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<dealRequest>("CampusNerdyModel.FK_dealRequest_sender", "dealRequest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<dealRequest>("CampusNerdyModel.FK_dealRequest_sender", "dealRequest", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CampusNerdyModel", Name="senderForMarket")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class senderForMarket : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 senderForMarket 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        public static senderForMarket CreatesenderForMarket(global::System.Int32 id)
        {
            senderForMarket senderForMarket = new senderForMarket();
            senderForMarket.id = id;
            return senderForMarket;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> senderID
        {
            get
            {
                return _senderID;
            }
            set
            {
                OnsenderIDChanging(value);
                ReportPropertyChanging("senderID");
                _senderID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("senderID");
                OnsenderIDChanged();
            }
        }
        private Nullable<global::System.Int32> _senderID;
        partial void OnsenderIDChanging(Nullable<global::System.Int32> value);
        partial void OnsenderIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> supermarketID
        {
            get
            {
                return _supermarketID;
            }
            set
            {
                OnsupermarketIDChanging(value);
                ReportPropertyChanging("supermarketID");
                _supermarketID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("supermarketID");
                OnsupermarketIDChanged();
            }
        }
        private Nullable<global::System.Int32> _supermarketID;
        partial void OnsupermarketIDChanging(Nullable<global::System.Int32> value);
        partial void OnsupermarketIDChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CampusNerdyModel", "FK_senderForMarket_tb_SuperMaket", "tb_SuperMaket")]
        public tb_SuperMaket tb_SuperMaket
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tb_SuperMaket>("CampusNerdyModel.FK_senderForMarket_tb_SuperMaket", "tb_SuperMaket").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tb_SuperMaket>("CampusNerdyModel.FK_senderForMarket_tb_SuperMaket", "tb_SuperMaket").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<tb_SuperMaket> tb_SuperMaketReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tb_SuperMaket>("CampusNerdyModel.FK_senderForMarket_tb_SuperMaket", "tb_SuperMaket");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<tb_SuperMaket>("CampusNerdyModel.FK_senderForMarket_tb_SuperMaket", "tb_SuperMaket", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CampusNerdyModel", Name="sysdiagrams")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagrams : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 sysdiagrams 对象。
        /// </summary>
        /// <param name="name">name 属性的初始值。</param>
        /// <param name="principal_id">principal_id 属性的初始值。</param>
        /// <param name="diagram_id">diagram_id 属性的初始值。</param>
        public static sysdiagrams Createsysdiagrams(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagrams sysdiagrams = new sysdiagrams();
            sysdiagrams.name = name;
            sysdiagrams.principal_id = principal_id;
            sysdiagrams.diagram_id = diagram_id;
            return sysdiagrams;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CampusNerdyModel", Name="tb_Dictionary")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tb_Dictionary : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 tb_Dictionary 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        public static tb_Dictionary Createtb_Dictionary(global::System.Int32 id)
        {
            tb_Dictionary tb_Dictionary = new tb_Dictionary();
            tb_Dictionary.id = id;
            return tb_Dictionary;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String type
        {
            get
            {
                return _type;
            }
            set
            {
                OntypeChanging(value);
                ReportPropertyChanging("type");
                _type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("type");
                OntypeChanged();
            }
        }
        private global::System.String _type;
        partial void OntypeChanging(global::System.String value);
        partial void OntypeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String theKey
        {
            get
            {
                return _theKey;
            }
            set
            {
                OntheKeyChanging(value);
                ReportPropertyChanging("theKey");
                _theKey = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("theKey");
                OntheKeyChanged();
            }
        }
        private global::System.String _theKey;
        partial void OntheKeyChanging(global::System.String value);
        partial void OntheKeyChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String theValue
        {
            get
            {
                return _theValue;
            }
            set
            {
                OntheValueChanging(value);
                ReportPropertyChanging("theValue");
                _theValue = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("theValue");
                OntheValueChanged();
            }
        }
        private global::System.String _theValue;
        partial void OntheValueChanging(global::System.String value);
        partial void OntheValueChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CampusNerdyModel", Name="tb_GoodInf")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tb_GoodInf : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 tb_GoodInf 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        public static tb_GoodInf Createtb_GoodInf(global::System.Int32 id)
        {
            tb_GoodInf tb_GoodInf = new tb_GoodInf();
            tb_GoodInf.id = id;
            return tb_GoodInf;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String goodName
        {
            get
            {
                return _goodName;
            }
            set
            {
                OngoodNameChanging(value);
                ReportPropertyChanging("goodName");
                _goodName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("goodName");
                OngoodNameChanged();
            }
        }
        private global::System.String _goodName;
        partial void OngoodNameChanging(global::System.String value);
        partial void OngoodNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String goodInfo
        {
            get
            {
                return _goodInfo;
            }
            set
            {
                OngoodInfoChanging(value);
                ReportPropertyChanging("goodInfo");
                _goodInfo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("goodInfo");
                OngoodInfoChanged();
            }
        }
        private global::System.String _goodInfo;
        partial void OngoodInfoChanging(global::System.String value);
        partial void OngoodInfoChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> isUse
        {
            get
            {
                return _isUse;
            }
            set
            {
                OnisUseChanging(value);
                ReportPropertyChanging("isUse");
                _isUse = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("isUse");
                OnisUseChanged();
            }
        }
        private Nullable<global::System.Boolean> _isUse;
        partial void OnisUseChanging(Nullable<global::System.Boolean> value);
        partial void OnisUseChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CampusNerdyModel", "FK_goodInfo_superMarket_tb_GoodInf", "goodInfo_superMarket")]
        public EntityCollection<goodInfo_superMarket> goodInfo_superMarket
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<goodInfo_superMarket>("CampusNerdyModel.FK_goodInfo_superMarket_tb_GoodInf", "goodInfo_superMarket");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<goodInfo_superMarket>("CampusNerdyModel.FK_goodInfo_superMarket_tb_GoodInf", "goodInfo_superMarket", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CampusNerdyModel", Name="tb_Role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tb_Role : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 tb_Role 对象。
        /// </summary>
        /// <param name="roleID">roleID 属性的初始值。</param>
        public static tb_Role Createtb_Role(global::System.String roleID)
        {
            tb_Role tb_Role = new tb_Role();
            tb_Role.roleID = roleID;
            return tb_Role;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String roleID
        {
            get
            {
                return _roleID;
            }
            set
            {
                if (_roleID != value)
                {
                    OnroleIDChanging(value);
                    ReportPropertyChanging("roleID");
                    _roleID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("roleID");
                    OnroleIDChanged();
                }
            }
        }
        private global::System.String _roleID;
        partial void OnroleIDChanging(global::System.String value);
        partial void OnroleIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String roleName
        {
            get
            {
                return _roleName;
            }
            set
            {
                OnroleNameChanging(value);
                ReportPropertyChanging("roleName");
                _roleName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("roleName");
                OnroleNameChanged();
            }
        }
        private global::System.String _roleName;
        partial void OnroleNameChanging(global::System.String value);
        partial void OnroleNameChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CampusNerdyModel", "FK_tb_Role_UserRelations_tb_Role", "tb_Role_UserRelations")]
        public EntityCollection<tb_Role_UserRelations> tb_Role_UserRelations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<tb_Role_UserRelations>("CampusNerdyModel.FK_tb_Role_UserRelations_tb_Role", "tb_Role_UserRelations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<tb_Role_UserRelations>("CampusNerdyModel.FK_tb_Role_UserRelations_tb_Role", "tb_Role_UserRelations", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CampusNerdyModel", Name="tb_Role_UserRelations")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tb_Role_UserRelations : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 tb_Role_UserRelations 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        public static tb_Role_UserRelations Createtb_Role_UserRelations(global::System.Int32 id)
        {
            tb_Role_UserRelations tb_Role_UserRelations = new tb_Role_UserRelations();
            tb_Role_UserRelations.id = id;
            return tb_Role_UserRelations;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String roleID
        {
            get
            {
                return _roleID;
            }
            set
            {
                OnroleIDChanging(value);
                ReportPropertyChanging("roleID");
                _roleID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("roleID");
                OnroleIDChanged();
            }
        }
        private global::System.String _roleID;
        partial void OnroleIDChanging(global::System.String value);
        partial void OnroleIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String userID
        {
            get
            {
                return _userID;
            }
            set
            {
                OnuserIDChanging(value);
                ReportPropertyChanging("userID");
                _userID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("userID");
                OnuserIDChanged();
            }
        }
        private global::System.String _userID;
        partial void OnuserIDChanging(global::System.String value);
        partial void OnuserIDChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CampusNerdyModel", "FK_tb_Role_UserRelations_tb_Role", "tb_Role")]
        public tb_Role tb_Role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tb_Role>("CampusNerdyModel.FK_tb_Role_UserRelations_tb_Role", "tb_Role").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tb_Role>("CampusNerdyModel.FK_tb_Role_UserRelations_tb_Role", "tb_Role").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<tb_Role> tb_RoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tb_Role>("CampusNerdyModel.FK_tb_Role_UserRelations_tb_Role", "tb_Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<tb_Role>("CampusNerdyModel.FK_tb_Role_UserRelations_tb_Role", "tb_Role", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CampusNerdyModel", "FK_tb_Role_UserRelations_tb_User", "tb_User")]
        public tb_User tb_User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tb_User>("CampusNerdyModel.FK_tb_Role_UserRelations_tb_User", "tb_User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tb_User>("CampusNerdyModel.FK_tb_Role_UserRelations_tb_User", "tb_User").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<tb_User> tb_UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tb_User>("CampusNerdyModel.FK_tb_Role_UserRelations_tb_User", "tb_User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<tb_User>("CampusNerdyModel.FK_tb_Role_UserRelations_tb_User", "tb_User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CampusNerdyModel", Name="tb_SuperMaket")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tb_SuperMaket : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 tb_SuperMaket 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        /// <param name="superMarketName">superMarketName 属性的初始值。</param>
        public static tb_SuperMaket Createtb_SuperMaket(global::System.Int32 id, global::System.String superMarketName)
        {
            tb_SuperMaket tb_SuperMaket = new tb_SuperMaket();
            tb_SuperMaket.id = id;
            tb_SuperMaket.superMarketName = superMarketName;
            return tb_SuperMaket;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String superMarketName
        {
            get
            {
                return _superMarketName;
            }
            set
            {
                OnsuperMarketNameChanging(value);
                ReportPropertyChanging("superMarketName");
                _superMarketName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("superMarketName");
                OnsuperMarketNameChanged();
            }
        }
        private global::System.String _superMarketName;
        partial void OnsuperMarketNameChanging(global::System.String value);
        partial void OnsuperMarketNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String info
        {
            get
            {
                return _info;
            }
            set
            {
                OninfoChanging(value);
                ReportPropertyChanging("info");
                _info = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("info");
                OninfoChanged();
            }
        }
        private global::System.String _info;
        partial void OninfoChanging(global::System.String value);
        partial void OninfoChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> isUse
        {
            get
            {
                return _isUse;
            }
            set
            {
                OnisUseChanging(value);
                ReportPropertyChanging("isUse");
                _isUse = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("isUse");
                OnisUseChanged();
            }
        }
        private Nullable<global::System.Boolean> _isUse;
        partial void OnisUseChanging(Nullable<global::System.Boolean> value);
        partial void OnisUseChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> showAreaID
        {
            get
            {
                return _showAreaID;
            }
            set
            {
                OnshowAreaIDChanging(value);
                ReportPropertyChanging("showAreaID");
                _showAreaID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("showAreaID");
                OnshowAreaIDChanged();
            }
        }
        private Nullable<global::System.Int32> _showAreaID;
        partial void OnshowAreaIDChanging(Nullable<global::System.Int32> value);
        partial void OnshowAreaIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> factArea
        {
            get
            {
                return _factArea;
            }
            set
            {
                OnfactAreaChanging(value);
                ReportPropertyChanging("factArea");
                _factArea = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("factArea");
                OnfactAreaChanged();
            }
        }
        private Nullable<global::System.Int32> _factArea;
        partial void OnfactAreaChanging(Nullable<global::System.Int32> value);
        partial void OnfactAreaChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CampusNerdyModel", "FK_tb_SuperMaket_areaInfo", "areaInfo")]
        public areaInfo areaInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<areaInfo>("CampusNerdyModel.FK_tb_SuperMaket_areaInfo", "areaInfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<areaInfo>("CampusNerdyModel.FK_tb_SuperMaket_areaInfo", "areaInfo").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<areaInfo> areaInfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<areaInfo>("CampusNerdyModel.FK_tb_SuperMaket_areaInfo", "areaInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<areaInfo>("CampusNerdyModel.FK_tb_SuperMaket_areaInfo", "areaInfo", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CampusNerdyModel", "FK_tb_SuperMaket_areaInfo1", "areaInfo")]
        public areaInfo areaInfo1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<areaInfo>("CampusNerdyModel.FK_tb_SuperMaket_areaInfo1", "areaInfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<areaInfo>("CampusNerdyModel.FK_tb_SuperMaket_areaInfo1", "areaInfo").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<areaInfo> areaInfo1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<areaInfo>("CampusNerdyModel.FK_tb_SuperMaket_areaInfo1", "areaInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<areaInfo>("CampusNerdyModel.FK_tb_SuperMaket_areaInfo1", "areaInfo", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CampusNerdyModel", "FK_goodInfo_superMarket_tb_SuperMaket", "goodInfo_superMarket")]
        public EntityCollection<goodInfo_superMarket> goodInfo_superMarket
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<goodInfo_superMarket>("CampusNerdyModel.FK_goodInfo_superMarket_tb_SuperMaket", "goodInfo_superMarket");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<goodInfo_superMarket>("CampusNerdyModel.FK_goodInfo_superMarket_tb_SuperMaket", "goodInfo_superMarket", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CampusNerdyModel", "FK_senderForMarket_tb_SuperMaket", "senderForMarket")]
        public EntityCollection<senderForMarket> senderForMarket
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<senderForMarket>("CampusNerdyModel.FK_senderForMarket_tb_SuperMaket", "senderForMarket");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<senderForMarket>("CampusNerdyModel.FK_senderForMarket_tb_SuperMaket", "senderForMarket", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CampusNerdyModel", Name="tb_User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tb_User : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 tb_User 对象。
        /// </summary>
        /// <param name="userID">userID 属性的初始值。</param>
        public static tb_User Createtb_User(global::System.String userID)
        {
            tb_User tb_User = new tb_User();
            tb_User.userID = userID;
            return tb_User;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String userID
        {
            get
            {
                return _userID;
            }
            set
            {
                if (_userID != value)
                {
                    OnuserIDChanging(value);
                    ReportPropertyChanging("userID");
                    _userID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("userID");
                    OnuserIDChanged();
                }
            }
        }
        private global::System.String _userID;
        partial void OnuserIDChanging(global::System.String value);
        partial void OnuserIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String userName
        {
            get
            {
                return _userName;
            }
            set
            {
                OnuserNameChanging(value);
                ReportPropertyChanging("userName");
                _userName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("userName");
                OnuserNameChanged();
            }
        }
        private global::System.String _userName;
        partial void OnuserNameChanging(global::System.String value);
        partial void OnuserNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String hashed_PassWord
        {
            get
            {
                return _hashed_PassWord;
            }
            set
            {
                Onhashed_PassWordChanging(value);
                ReportPropertyChanging("hashed_PassWord");
                _hashed_PassWord = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("hashed_PassWord");
                Onhashed_PassWordChanged();
            }
        }
        private global::System.String _hashed_PassWord;
        partial void Onhashed_PassWordChanging(global::System.String value);
        partial void Onhashed_PassWordChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String salt
        {
            get
            {
                return _salt;
            }
            set
            {
                OnsaltChanging(value);
                ReportPropertyChanging("salt");
                _salt = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("salt");
                OnsaltChanged();
            }
        }
        private global::System.String _salt;
        partial void OnsaltChanging(global::System.String value);
        partial void OnsaltChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> createDate
        {
            get
            {
                return _createDate;
            }
            set
            {
                OncreateDateChanging(value);
                ReportPropertyChanging("createDate");
                _createDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("createDate");
                OncreateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _createDate;
        partial void OncreateDateChanging(Nullable<global::System.DateTime> value);
        partial void OncreateDateChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CampusNerdyModel", "FK_tb_Role_UserRelations_tb_User", "tb_Role_UserRelations")]
        public EntityCollection<tb_Role_UserRelations> tb_Role_UserRelations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<tb_Role_UserRelations>("CampusNerdyModel.FK_tb_Role_UserRelations_tb_User", "tb_Role_UserRelations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<tb_Role_UserRelations>("CampusNerdyModel.FK_tb_Role_UserRelations_tb_User", "tb_Role_UserRelations", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CampusNerdyModel", "FK_tb_UserInfo_tb_User", "tb_UserInfo")]
        public EntityCollection<tb_UserInfo> tb_UserInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<tb_UserInfo>("CampusNerdyModel.FK_tb_UserInfo_tb_User", "tb_UserInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<tb_UserInfo>("CampusNerdyModel.FK_tb_UserInfo_tb_User", "tb_UserInfo", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CampusNerdyModel", Name="tb_UserInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tb_UserInfo : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 tb_UserInfo 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        public static tb_UserInfo Createtb_UserInfo(global::System.Int32 id)
        {
            tb_UserInfo tb_UserInfo = new tb_UserInfo();
            tb_UserInfo.id = id;
            return tb_UserInfo;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String userID
        {
            get
            {
                return _userID;
            }
            set
            {
                OnuserIDChanging(value);
                ReportPropertyChanging("userID");
                _userID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("userID");
                OnuserIDChanged();
            }
        }
        private global::System.String _userID;
        partial void OnuserIDChanging(global::System.String value);
        partial void OnuserIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String userDescribe
        {
            get
            {
                return _userDescribe;
            }
            set
            {
                OnuserDescribeChanging(value);
                ReportPropertyChanging("userDescribe");
                _userDescribe = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("userDescribe");
                OnuserDescribeChanged();
            }
        }
        private global::System.String _userDescribe;
        partial void OnuserDescribeChanging(global::System.String value);
        partial void OnuserDescribeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String email
        {
            get
            {
                return _email;
            }
            set
            {
                OnemailChanging(value);
                ReportPropertyChanging("email");
                _email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("email");
                OnemailChanged();
            }
        }
        private global::System.String _email;
        partial void OnemailChanging(global::System.String value);
        partial void OnemailChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CampusNerdyModel", "FK_tb_UserInfo_tb_User", "tb_User")]
        public tb_User tb_User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tb_User>("CampusNerdyModel.FK_tb_UserInfo_tb_User", "tb_User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tb_User>("CampusNerdyModel.FK_tb_UserInfo_tb_User", "tb_User").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<tb_User> tb_UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tb_User>("CampusNerdyModel.FK_tb_UserInfo_tb_User", "tb_User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<tb_User>("CampusNerdyModel.FK_tb_UserInfo_tb_User", "tb_User", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
